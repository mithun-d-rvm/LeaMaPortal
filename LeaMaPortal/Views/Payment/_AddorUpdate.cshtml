@model LeaMaPortal.Models.PaymentViewModel
@{
    Layout = null;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "Payment" }))
{
    @*@Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
    @Html.HiddenFor(model => model.Id, new { @id = "Id" })
    @Html.HiddenFor(model => model.Supplier_id)
    @Html.HiddenFor(model => model.Supplier_Name)
    @Html.HiddenFor(model => model.Property_id)
    @Html.HiddenFor(model => model.Property_Name)
    @Html.HiddenFor(model => model.Unit_ID)
    @Html.HiddenFor(model => model.unit_Name)
<div class="inner-block">
    <div class="blank">
        <div class="row">
            <div class="col-md-6">
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PaymentNo, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">

                        @Html.EditorFor(model => model.PaymentNo, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly= "readonly"} })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("PaymentType",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control"})
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("PaymentMode",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Supplier_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("Supplierid",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Supplier_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("SupplierName",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>

                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.agreement_no, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("agreement_no", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })                        
                    </div>
                </div>



                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Property_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @*@Html.EditorFor(model => model.Property_ID, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.DropDownList("Propertyid", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })                        
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @*@Html.EditorFor(model => model.Property_Name, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.DropDownList("PropertyName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })                        
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Unit_ID, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @*@Html.EditorFor(model => model.Unit_ID, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.DropDownList("UnitID", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control"})                        
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.unit_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @*@Html.EditorFor(model => model.unit_Name, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.DropDownList("unitName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })                        
                    </div>
                </div>



                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>


            </div>
            <div class="col-md-6">


                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.AmtInWords, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AmtInWords, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.AdvAcCode, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("AdvAcCode",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.PDCstatus, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("PDCStatus",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding" id="chequeNo">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DDChequeNo, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DDChequeNo, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding" id="chequeDate">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DDChequeDate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DDChequeDate, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankAcCode, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("BankAcCode",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankAcName, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("BankAcName",null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 form-input-padding">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Narration, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                
            </div>

        </div>
        <div class="row" id="paymentDetail">
            <div class="p-b-25">
                <h3>Invoice Details</h3>
            </div>
                <div class="row">
                    <div class="col-md-12 document-row" id="GridView">                        
                        <div class="col-md-2">
                            Invoice Type
                        </div>
                        <div class="col-md-2">
                            Invoice Number
                        </div>
                        <div class="col-md-2">
                            Invoice Date
                        </div>
                        <div class="col-md-2">
                            Invoice Description
                        </div>
                        <div class="col-md-2">
                            Remarks
                        </div>
                    </div>
                </div>
                <div class="row ht-5">
                    &nbsp;
                </div>
                <div class="row">
                    <div class="col-md-12 document-row" id="GridView">                        
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="Invtype" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="Invno" />
                        </div>
                        <div class="col-md-2">
                            <input type="date" class="form-control master-form-input" id="InvoiceDate" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="Description" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="Remarks" />
                        </div>
                    </div>

                    <div class="col-md-12 document-row" id="GridView">
                        <div class="col-md-2">
                            Invoice Amount
                        </div>
                        <div class="col-md-2">
                            Debit Amount
                        </div>
                        <div class="col-md-2">
                            Paid Amount
                        </div>
                        <div class="col-md-2">
                            Balance Amount
                        </div>
                    </div>

                </div>
                <div class="row ht-5">
                    &nbsp;
                </div>
                <div class="row">
                    <div class="col-md-12 document-row" id="GridView">
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="InvoiceAmount" onchange="calculateBalance('')" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="DebitAmount" onchange="calculateBalance('')" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="PaidAmount" onchange="calculateBalance('')" />
                        </div>
                        <div class="col-md-2">
                            <input type="text" class="form-control master-form-input" id="Balance" />
                        </div>
                        <div class="col-md-2" >
                            <button type="button" class="document-btn" onclick="Add()">Add</button>
                        </div>
                    </div>

                </div>
                <div class="row ht-5">
                    &nbsp;
                </div>
            <table class="row m-t-20" id="PaymentDetailsForm">
                @if (Model.PaymentDetailsViewModel != null)
                {
                    for (int j = 0; j < Model.PaymentDetailsViewModel.Count; j++)
                    {
                        var html = "<div class='row'><div class='col-md-12 document-row' id='GridView" + @j + "'>";
                        html += "<div class='col-md-2'>Invoice Type</div>";
                        html += "<div class='col-md-2'>Invoice Number</div>";
                        html += "<div class='col-md-2'>Invoice Date</div>";
                        html += "<div class='col-md-2'>Invoice Description</div>";
                        html += "<div class='col-md-2'>Remarks</div>";
                        html += "</div></div><div class='row ht-5'>&nbsp;</div>";

                        html += "<div class='row'><div class='col-md-12 document-row' id='GridView'>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].Invtype + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Invtype' data-name='Inv type' id='Invtype" + @j + "' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].Invno + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Invno' data-name='Inv no' id='Invno" + @j + "' /></div>";
                        html += "<div class='col-md-2'><input type='date' value='" + @Model.PaymentDetailsViewModel[j].InvoiceDate + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].InvoiceDate' data-name='Invoice Date' id='InvoiceDate" + @j + "' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].Description + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Description' data-name='Description' id='Description" + @j + "' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].Remarks + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Remarks' data-name='Remarks' id='Remarks" + @j + "' /></div>";
                        html += "</div><div class='col-md-12 document-row' id='GridView'>";
                        html += "<div class='col-md-2'>Invoice Amount</div>";
                        html += "<div class='col-md-2'>Debit Amount</div>";
                        html += "<div class='col-md-2'>Paid Amount</div>";
                        html += "<div class='col-md-2'>Balance Amount</div>";
                        html += "</div></div><div class='row ht-5'>&nbsp;</div>";

                        html += "<div class='row'><div class='col-md-12 document-row' id='GridView'>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].InvoiceAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].InvoiceAmount' data-name='Invoice Amount' id='InvoiceAmount" + @j + "' onchange='calculateBalance("+@j+")' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].DebitAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].DebitAmount' data-name='Debit Amount' id='DebitAmount" + @j + "' onchange='calculateBalance(" + @j + ")' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].PaidAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].PaidAmount' data-name='Paid Amount' id='PaidAmount" + @j + "' onchange='calculateBalance(" + @j + ")' /></div>";
                        html += "<div class='col-md-2'><input type='text' value='" + @Model.PaymentDetailsViewModel[j].Balance + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Balance' data-name='Balance' id='Balance" + @j + "' /></div>";
                        html += "<div class='col-md-2'><button type='button' id='Deleter" + @j + "' class='document-btn removebutton'>Delete</button></div>";
                        html += "</div></div><div class='row ht-5'>&nbsp;</div>";
                        <tr>
                            <td>
                                @Html.Raw(html)
                            </td>
                        </tr>
                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>                        
                    }
                }
            </table>


                </div>
        <div class="col-md-12 form-input-padding">
            <div class="col-md-4">
                &nbsp;
            </div>
            <div class="col-md-4">
                <button class="btn master-form-btn" id="btnSubmit" type="submit">Submit</button>
            </div>
        </div>
</div>
</div>
}
<script>

    $("#Supplierid").on('change', function (e) {
        debugger;
        //var tenantid = $("#Supplier_id").val();
        $("#SupplierName").val($("#Supplierid option:selected").val());
        //$("#Tenant_id").val($("#Tenantid option:selected").text() == "--Select--" ? null : $("#Tenantid option:selected").text());
        //$("#Tenant_Name").val($("#TenantName option:selected").text() == "--Select--" ? null : $("#TenantName option:selected").text());

        //$("#TenantName").prop('selected', true).change();
    });
    $("#SupplierName").on('change', function (e) {
        debugger;
        //var tenantid = $("#TenantName").val();
        $("#Supplierid").val($("#SupplierName option:selected").val());
        //$("#Tenant_Name").val($("#TenantName option:selected").text() == "--Select--" ? null : $("#TenantName option:selected").text());
        //$("#Tenant_id").val($("#Tenantid option:selected").text() == "--Select--" ? null : $("#Tenantid option:selected").text());
    });

    $("#agreement_no").on('change', function (e) {
        debugger; getAgreementDetails()
    });

    $("#Propertyid").on('change', function (e) {
        debugger;
        var propertyid = $("#Propertyid").val();
        $("#PropertyName").val($("#Propertyid option:selected").val());

        //document.getElementById("#Property_Id").value = propertyid;

        //$('#Property_Id').attr("value", $("#PropertyId option:selected").text() == "--Select--" ? null : $("#PropertyId option:selected").text());
        //$('#Property_Name').attr("value", $("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());

        //$("input#Property_ID").val(propertyid);
        //$("#Property_Name").val($("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());

        var id = $("#Propertyid option:selected").text() == "--Select--" ? null : propertyid;
        getunits(id);
        //$("#TenantName").prop('selected', true).change();
    });
    $("#PropertyName").on('change', function (e) {
        debugger;
        var propertyid = $("#PropertyName").val();
        $("#Propertyid").val($("#PropertyName option:selected").val());
        //$("#Property_Name").val($("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());
        //$("#Property_Id").val($("#PropertyId option:selected").text() == "--Select--" ? null : $("#PropertyId option:selected").text());
        //$("input#Property_ID").val(propertyid);
        var id = $("#PropertyName option:selected").text() == "--Select--" ? null : propertyid;
        getunits(id);
    });


    $("#UnitID").on('change', function (e) {
        debugger;
        var unitid = $("#UnitID").val();
        $("#unitName").val($("#UnitID option:selected").val());
        //$("#Unit_Id").val($("#UnitId option:selected").text() == "--Select--" ? null : $("#UnitId option:selected").text());
        //$("input#Unit_Id").val(unitid);
        //$("#unit_Name").val($("#unitName option:selected").text() == "--Select--" ? null : $("#unitName option:selected").text());

        var id = $("#UnitID option:selected").text() == "--Select--" ? null : unitid;
        getproperty(id);
        //$("#TenantName").prop('selected', true).change();
    });
    $("#unitName").on('change', function (e) {
        debugger;
        var unitid = $("#unitName").val();
        $("#UnitID").val($("#unitName option:selected").val());
        //$("#unit_Name").val($("#unitName option:selected").text() == "--Select--" ? null : $("#unitName option:selected").text());
        //$("input#Unit_Id").val(unitid);
        //$("#Unit_Id").val($("#UnitId option:selected").text() == "--Select--" ? null : $("#UnitId option:selected").text());
        var id = $("#unitName option:selected").text() == "--Select--" ? null : unitid;
        getproperty(id);
    });


    function getunits(id) {
        //var propertyid = $("#Propertyid").val();
        //var propertyname = $("#PropertyName option:selected").text();
        var data = id == null ? {} : { propertyid: id };
        $.ajax(
                {
                    url: "../Invoice/GetPropertyUnits",
                    // dataType: "jsonp",
                    method: "GET",
                    data: data, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                        debugger;
                        var options = '<option value="" selected>--Select--</option>';
                        //if (id==null) {
                        //    options = '<option value="" selected>--Select--</option>';
                        //}
                        $("#UnitID").empty();

                        $.each(response, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                        });
                        $('#UnitID').append(options);

                        $("#unitName").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                        });
                        $('#unitName').append(options);


                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
    }

    function getproperty(id) {
        //var unitid = $("#UnitId").val();
        //var unitname = $("#unitName option:selected").text();
        if (id == null) {
            $('#Propertyid').val('')
            $("#Propertyid").prop('selected', false).change();
        }
        else {
            $.ajax(
                {
                    url: "../Invoice/GetUnitProperty",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { unitid: id }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                        debugger;
                        $("#Propertyid").val(response);
                        $("#PropertyName").val(response);
                        //var options = '';
                        //if (id == null) {
                        //    options = '<option value="" selected>--Select--</option>';
                        //}
                        //$("#PropertyId").empty();

                        //$.each(response, function (index, data) {
                        //    options += '<option value="' + data.Propertyid + '">' + data.Propertyid + '</option>';
                        //});
                        //$('#PropertyId').append(options);

                        //$("#PropertyName").empty();
                        //var options = '';
                        //$.each(response, function (index, data) {
                        //    options += '<option value="' + data.Propertyid + '">' + data.PropertyName + '</option>';
                        //});
                        //$('#PropertyName').append(options);


                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
        }

    }


    function showHideSubForm(paymentType)
    {
        if (paymentType != "against invoice") {
            document.getElementById('paymentDetail').style.display = "none";
        }
        else
        {
            document.getElementById('paymentDetail').style.display = "block";
        }
    }
    $("#PaymentType").change(function () { showHideSubForm($("#PaymentType").val()) });
    showHideSubForm($("#PaymentType").val());

    function showHideCheque(paymentMode) {
        if (paymentMode != "cheque") {
            document.getElementById('chequeNo').style.display = "none";
            document.getElementById('chequeDate').style.display = "none";
        }
        else {
            document.getElementById('chequeNo').style.display = "block";
            document.getElementById('chequeDate').style.display = "block";
        }
    }
    $("#PaymentMode").change(function () { showHideCheque($("#PaymentMode").val()) });
    showHideCheque($("#PaymentMode").val());

    function calculateBalance(pos) {
        var InvoiceAmount = document.getElementById("InvoiceAmount"+pos).value;
        var DebitAmount = document.getElementById("DebitAmount" + pos).value;
        var PaidAmount = document.getElementById("PaidAmount" + pos).value;
        var Balance = InvoiceAmount - PaidAmount;
        document.getElementById("Balance" + pos).value = Balance;
    }


    //function getUnitId(flag) {
    //    var PropertyId = null;
    //    if (flag == 1) {
    //        PropertyId = $("#property_id").val();
    //    }
    //    else if (flag == 2) {
    //        PropertyId = $("#property_name").val();
    //    }
    //}

        //$.ajax(
        //        {
        //            url: "../Payment/GetUnitId",
        //            method: "POST",
        //            async: false,
        //            data: { PropertyId: PropertyId },
        //            success: function (response) {
        //                $("#unit_id").empty();
        //                $("#unit_name").empty();
        //                $("#agreement_number").empty();
        //                var unit_id_options = '';
        //                var unit_name_options = '';
        //                var agreement_options = '';
        //                $.each(response.UnitId, function (index, data) {
        //                    unit_id_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $.each(response.UnitName, function (index, data) {
        //                    unit_name_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $.each(response.AgreementNo, function (index, data) {
        //                    agreement_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });

        //                $('#unit_id').append(unit_id_options);
        //                $('#unit_name').append(unit_name_options);
        //                $('#agreement_number').append(agreement_options);
        //                $("#property_id").val(PropertyId);
        //                $("#property_name").val(PropertyId);
        //            },
        //            error: function (jqXhr, textStatus, errorThrown) {
        //                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
        //            },
        //            complete: function () {
        //            }
        //        });
    //$("#property_id").change(function () { getUnitId(1) });
    //$("#property_name").change(function () { getUnitId(2) });
    ////getUnitId(0);
    //function getProperty(flag) {
    //    var UnitId = null;
    //    if (flag == 1) {
    //        UnitId = $("#unit_id").val();
    //    }
    //    else if (flag == 2) {
    //        UnitId = $("#unit_name").val();
    //    }
    //    $.ajax(
    //            {
    //                url: "../Payment/GetProperty",
    //                method: "POST",
    //                async: false,
    //                data: { UnitId: UnitId },
    //                success: function (response) {
    //                    $("#property_id").empty();
    //                    $("#property_name").empty();
    //                    $("#agreement_number").empty();
    //                    $('#property_id').append('<option value="' + response.PropertyId + '">' + response.PropertyId + '</option>');
    //                    $('#property_name').append('<option value="' + response.PropertyName + '">' + response.PropertyName + '</option>');
    //                    $('#agreement_number').append('<option value="' + response.AgreementNo + '">' + response.AgreementNo + '</option>');
    //                },
    //                error: function (jqXhr, textStatus, errorThrown) {
    //                    alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
    //                },
    //                complete: function () {
    //                }
    //            });
    //}
    $("#unit_id").change(function () { getProperty(1) });
    $("#unit_name").change(function () { getProperty(2) });
    function getAgreementDetails() {
        debugger;
        var agreement_selected_text = $("#agreement_no option:selected").text();
        var agreement_no = $("#agreement_no").val();
        if (agreement_selected_text != "--Select--") {
            $.ajax(
                {
                    url: "../Payment/GetAgreementDetails",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { AgreementNo: agreement_no }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                        debugger;
                        //$("#Tenantid").empty();
                        //var options = '';
                        //$.each(response.Tenants, function (index, data) {
                        //    options += '<option value="' + data.Tenantid + '">' + data.Tenantid + '</option>';
                        //});
                        //$('#Tenantid').append(options);

                        //$("#TenantName").empty();
                        //var options = '';
                        //$.each(response.Tenants, function (index, data) {
                        //    options += '<option value="' + data.Tenantid + '">' + data.TenantName + '</option>';
                        //});
                        //$('#TenantName').append(options);

                        $("#Propertyid").empty();
                        var options = '';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.Propertyid + '</option>';
                        });
                        $('#Propertyid').append(options);

                        $("#PropertyName").empty();
                        var options = '';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.PropertyName + '</option>';
                        });
                        $('#PropertyName').append(options);

                        $("#UnitID").empty();
                        var options = '';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                        });
                        $('#UnitID').append(options);

                        $("#unitName").empty();
                        var options = '';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                        });
                        $('#unitName').append(options);

                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
        }
        else {
            $.ajax(
                {
                    url: "../Invoice/GetDropdownValues",
                    // dataType: "jsonp",
                    method: "GET",
                    data: {}, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                        debugger;
                        //$("#Tenantid").empty();
                        //var options = '<option value="" selected>--Select--</option>';
                        //$.each(response.Tenants, function (index, data) {
                        //    options += '<option value="' + data.Tenantid + '">' + data.Tenantid + '</option>';
                        //});
                        //$('#Tenantid').append(options);

                        //$("#TenantName").empty();
                        //var options = '<option value="" selected>--Select--</option>';
                        //$.each(response.Tenants, function (index, data) {
                        //    options += '<option value="' + data.Tenantid + '">' + data.TenantName + '</option>';
                        //});
                        //$('#TenantName').append(options);

                        $("#Propertyid").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.Propertyid + '</option>';
                        });
                        $('#Propertyid').append(options);

                        $("#PropertyName").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.PropertyName + '</option>';
                        });
                        $('#PropertyName').append(options);

                        $("#UnitID").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                        });
                        $('#UnitID').append(options);

                        $("#unitName").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                        });
                        $('#unitName').append(options);

                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
        }



        //var AgreementNo = $("#agreement_no").val();
        //$.ajax(
        //        {
        //            url: "../Payment/GetAgreementDetails",
        //            method: "GET",
        //            async: false,
        //            data: { AgreementNo: AgreementNo },
        //            success: function (response) {
        //                $("#property_id").empty();
        //                $("#property_name").empty();
        //                $("#unit_id").empty();
        //                $("#unit_name").empty();
        //                var unit_id_options = '';
        //                var unit_name_options = '';
        //                var property_id_options = '';
        //                var property_name_options = '';
        //                $.each(response.UnitId, function (index, data) {
        //                    unit_id_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $.each(response.UnitName, function (index, data) {
        //                    unit_name_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $.each(response.PropertyId, function (index, data) {
        //                    property_id_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $.each(response.PropertyName, function (index, data) {
        //                    property_name_options += '<option value="' + data.Value + '">' + data.Value + '</option>';
        //                });
        //                $('#unit_id').append(unit_id_options);
        //                $('#unit_name').append(unit_name_options);
        //                $('#property_id').append(property_id_options);
        //                $('#property_name').append(property_name_options);
        //            },
        //            error: function (jqXhr, textStatus, errorThrown) {
        //                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
        //            },
        //            complete: function () {
        //            }
        //        });
    }
    //$("#agreement_no").change(function () { debugger; getAgreementDetails() });
    var j = 0;
    function Add() {
        debugger;
        var Invtype = document.getElementById("Invtype").value;
        var Invno = document.getElementById("Invno").value;
        var InvoiceDate = document.getElementById("InvoiceDate").value;
        var Description = document.getElementById("Description").value;
        var InvoiceAmount = document.getElementById("InvoiceAmount").value;
        var DebitAmount = document.getElementById("DebitAmount").value;
        var PaidAmount = document.getElementById("PaidAmount").value;
        var Balance = document.getElementById("Balance").value;
        var Remarks = document.getElementById("Remarks").value;

        var html = "<tr><td><div class='row'><div class='col-md-12 document-row' id='GridView" + j + "'>";
        html += "<div class='col-md-2'>Invoice Type</div>";
        html += "<div class='col-md-2'>Invoice Number</div>";
        html += "<div class='col-md-2'>Invoice Date</div>";
        html += "<div class='col-md-2'>Invoice Description</div>";
        html += "<div class='col-md-2'>Remarks</div>";
        html += "</div></div><div class='row ht-5'>&nbsp;</div>";

        html += "<div class='row'><div class='col-md-12 document-row' id='GridView'>";
        html += "<div class='col-md-2'><input type='text' value='" + Invtype + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Invtype' data-name='Inv type' id='Invtype" + j + "' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + Invno + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Invno' data-name='Inv no' id='Invno" + j + "' /></div>";
        html += "<div class='col-md-2'><input type='date' value='" + InvoiceDate + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].InvoiceDate' data-name='Invoice Date' id='InvoiceDate" + j + "' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + Description + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Description' data-name='Description' id='Description" + j + "' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + Remarks + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Remarks' data-name='Remarks' id='Remarks" + j + "' /></div>";
        html += "</div><div class='col-md-12 document-row' id='GridView'>";
        html += "<div class='col-md-2'>Invoice Amount</div>";
        html += "<div class='col-md-2'>Debit Amount</div>";
        html += "<div class='col-md-2'>Paid Amount</div>";
        html += "<div class='col-md-2'>Balance Amount</div>";
        html += "</div></div><div class='row ht-5'>&nbsp;</div>";

        html += "<div class='row'><div class='col-md-12 document-row' id='GridView'>";
        html += "<div class='col-md-2'><input type='text' value='" + InvoiceAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].InvoiceAmount' data-name='Invoice Amount' id='InvoiceAmount" + j + "' onchange='calculateBalance("+j+")' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + DebitAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].DebitAmount' data-name='Debit Amount' id='DebitAmount" + j + "' onchange='calculateBalance(" + j + ")' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + PaidAmount + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].PaidAmount' data-name='Paid Amount' id='PaidAmount" + j + "' onchange='calculateBalance(" + j + ")' /></div>";
        html += "<div class='col-md-2'><input type='text' value='" + Balance + "' class='form-control master-form-input' name='PaymentDetailsViewModel[" + j + "].Balance' data-name='Balance' id='Balance" + j + "' /></div>";
        html += "<div class='col-md-2'><button type='button' id='Delete" + j + "' class='document-btn removebutton'>Delete</button></div>";
        html += "</div></div><div class='row ht-5'>&nbsp;</div>";
        html = html + "</td></tr><tr><td>&nbsp;</td></tr>"
        j++;
        $("#PaymentDetailsForm").append(html);
        document.getElementById("Invtype").value = "";
        document.getElementById("Invno").value = "";
        document.getElementById("InvoiceDate").value = "";
        document.getElementById("Description").value = "";
        document.getElementById("InvoiceAmount").value = "";
        document.getElementById("DebitAmount").value = "";
        document.getElementById("PaidAmount").value = "";
        document.getElementById("Balance").value = "";
        document.getElementById("Remarks").value = "";
    }

    $(document).on('click', 'button.removebutton', function () {
        $(this).closest('tr').remove();
        var existfilelist = document.getElementById('PaymentDetailsForm');
        var newindex = 0;
        $(existfilelist).find('> tbody > tr').each(function () {
            $(this).find("input").each(function () {
                var dataname = $(this).data("name");
                // alert(dataname + $(this) .val()+ '-' + newindex)
                $(this).attr({
                    'id': function (_, id) {
                        return id + newindex
                    },
                    'name': function (_, name) {
                        //return name + iTenantDocument[0].Name
                        return 'PaymentDetailsViewModel[' + newindex + '].' + dataname
                    }
                });
            });
            newindex++;
        });
        j = newindex;
    });
    $("form#Payment").off("submit").on("submit", function (e) {
        debugger;
        e.preventDefault();
        try {

            var form = $("form#Payment");
            $("#Supplier_id").val($("#Supplierid option:selected").text() == "--Select--" ? null : $("#Supplierid option:selected").text());
            $("#Supplier_Name").val($("#SupplierName option:selected").text() == "--Select--" ? null : $("#SupplierName option:selected").text());

            $("#Property_id").val($("#Propertyid option:selected").text() == "--Select--" ? null : $("#Propertyid option:selected").text());
            $("#Property_Name").val($("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());

            $("#Unit_ID").val($("#UnitID option:selected").text() == "--Select--" ? null : $("#UnitID option:selected").text());
            $("#unit_Name").val($("#unitName option:selected").text() == "--Select--" ? null : $("#unitName option:selected").text());
            $.ajax(
                {
                    url: "../Payment/AddOrUpdate",
                    method: "POST",
                    data: JSON.stringify($(form).serializeObject()),
                    contentType: "application/json",
                    processData: false,
                    success: function (response) {
                        debugger;
                        GetPayment();
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                        $(".result-title").text("Success");
                        $(".result-modal-body span").text(paymentAdded);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                        $(".result-title").text("Failure");
                        $(".result-modal-body span").text(masterResultError);
                    },
                    complete: function () {
                        $('#masterResultModal').modal('show');
                    }
                });

        }
        catch (ex) {
            alert(ex);
        }

    });
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };
</script>