

@model LeaMaPortal.Models.ApprovalSettingsViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "ApprovalSettings" }))
{
    @Html.HiddenFor(m => m.Id, new { @id = "ApprovalSettingsId" })
    <div class="col-md-12 leama-fieldset leama-header-top">
        <div class="row">
            <div class="col-md-12 leama-fieldset ">
                <div class="col-md-2 pull-left">
                    TCA Approval Required (Y/N) *
                </div>
                <div class="col-sm-4">
                    @Html.RadioButtonFor(model => model.Approval_flag, "Yes", new { @id = "Approval_flag_yes", required = "required" }) Yes
                    @Html.RadioButtonFor(model => model.Approval_flag, "No", new { @id = "Approval_flag_no", required = "required" }) No
                </div>
            </div>
            <div class="col-md-12 leama-fieldset ">
                <div class="col-md-2 pull-left">
                    @Html.LabelFor(model => model.Userid, htmlAttributes: new { @class = "leama-field-name" })
                </div>
                <div class="col-sm-4 ">
                    @Html.DropDownList("Userid", null, "--Select--", htmlAttributes: new { @class = "master-form-input subheader-select", @required = "required" })
                </div>
            </div>
            @*<div class="col-md-12 leama-fieldset ">
                    <div class="col-md-12 pull-left">
                        <button type="submit" class="col-md-offset-2 leama-btn">Submit</button>
                    </div>
                </div>*@
            <div class="col-md-12 form-input-padding btn-group-justified">
                <div class="col-md-3">

                </div>
                <div class="col-md-3">
                    <button class="btn master-form-btn" id="btnSubmit" type="submit">Submit</button>
                </div>
                <div class="col-md-3">
                    <button class="btn master-form-btn" id="btnCancel" type="reset" onclick="formReset()">Cancel</button>
                </div>
                <div class="col-md-3">

                </div>

            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {

        var id = $("#ApprovalSettingsId").val();
        if (id != 0) {
            document.getElementById("btnSubmit").innerHTML = 'Update';
        }

    });
    function formReset() {
        ApprovalAddOrUpdate();
    }

    //Add or update
    $("form#ApprovalSettings").off("submit").on("submit", function (e) {
        e.preventDefault();
        try {
            var form = $("form#ApprovalSettings");
            $.ajax(
                {
                    url: "../ApprovalSettings/AddOrUpdate",
                    method: "POST",
                    data: JSON.stringify($(form).serializeObject()),
                    contentType: "application/json",
                    processData: false,
                    success: function (response) {
                        if (response.Errors == undefined || response.Errors == "") {
                            GetApprovalSettings();
                            $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                            $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                            $(".result-title").text("Success");
                            $(".result-modal-body span").text(response.Message);
                        }
                        else {
                            //alert(response.Errors);
                            $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                            $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                            $(".result-title").text("Failure");
                            $(".result-modal-body span").text(response.Errors);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                        $(".result-title").text("Failure");
                        $(".result-modal-body span").text(masterResultError);
                    },
                    complete: function () {
                        $('#masterResultModal').modal('show');
                    }

                });

        }
        catch (ex) {
            alert(ex);
        }

    });
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };
</script>
