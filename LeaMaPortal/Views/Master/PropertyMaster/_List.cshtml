
@using MvcPaging
@model IPagedList<LeaMaPortal.Models.PropertyViewModel>
@{
    Layout = null;
}

<!DOCTYPE html>
<div class="col-md-12 leama-fieldset leama-header-top" style="background-color:white;">
    <div class="row" id="property-list">
        <div class="col-md-12 leama-fieldset ">
            <div class="col-md-2 pull-left">
                @Html.Label("Search", htmlAttributes: new { @class = "leama-field-name" })
            </div>
            <div class="col-md-4">
                <input type="text" class="leama-field form-control" name="Search" id="Search" value="@ViewData["Search"]" />
            </div>
            <div class="col-md-4">
                <button type="button" id="btn-search" class="btn btn-info leama-search-btn col-md-4">Go</button>
            </div>
        </div>

        <div class="col-md-12 leama-fieldset ">
            &nbsp;
        </div>

        <div class="divTable leama-fieldset col-md-12">


            <div class="divTableBody divFontBodyTable">
                <div class="divTableHeading">
                    <div class="divTableCell">Property Id</div>
                    <div class="divTableCell">Property Flag</div>
                    <div class="divTableCell">Property Id Tawtheeq</div>
                    <div class="divTableCell">Property Name</div>
                    <div class="divTableCell">Status</div>
                    <div class="divTableCell">Action</div>

                </div>
                @foreach (var item in Model)
                {
                    <div class="divTableRow">
                        <div class="divTableCell">@item.Property_Id</div>
                        <div class="divTableCell">@item.Property_Flag</div>
                        <div class="divTableCell">@item.Property_ID_Tawtheeq</div>
                        <div class="divTableCell">@item.Property_Name</div>
                        <div class="divTableCell">@item.Status</div>
                        <div class="divTableCell">
                            @if (@ViewBag.IsEditable == 1)
                            {
                                <span>  @Html.ActionLink(" ", "Edit", null, new { @class = "glyphicon glyphicon-edit property-edit", title = "Edit", @data_id = @item.Property_Id })</span>
                            }

                            @if (@ViewBag.IsDeletable == 1)
                            {
                                <span>
                                    |  @Html.ActionLink(" ", "Delete", null, new { @class = "glyphicon glyphicon-trash property-delete", @style = "color:red", @title = "Delete", @data_id = @item.Property_Id })
                                </span>
                            }

                            @*| @Html.ActionLink(" ", "Details", null, new { @class = "glyphicon glyphicon-th-list", title = "Details" })*@
                        </div>

                    </div>
                }


            </div>

        </div>

        <div class="col-md-12">
            @Html.HiddenFor(m => m.PageNumber)
            <div class="col-md-2">
                @Html.DropDownList("defaultPageSize", null, htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-lg-10 text-right">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    if (i == Model.PageNumber)
                    {
                        <input type="button" data-id="@i" value="@i" class="pagination-btn" />
                    }
                    else
                    {
                        <input type="button" data-id="@i" value="@i" class="Page" />
                    }

                }
            </div>
        </div>

        <div class="col-md-12 leama-fieldset ">
            &nbsp;
        </div>

        <script type="text/javascript">
            $(".Page").click(function (e) {
                $("#master-loader-list").removeClass("hide");
                $("#property-list").addClass("hide");
                var page = parseInt($(this).data("id"));
                var defaultPageSize = $("#defaultPageSize").val();
                var search = $("#Search").val();
                //alert(page);
                getCountryList(search, page, defaultPageSize)
            });
            $("#defaultPageSize").change(function () {
                $("#master-loader-list").removeClass("hide");
                $("#property-list").addClass("hide");
                var search = $("#Search").val();
                var defaultPageSize = $("#defaultPageSize").val();
                getCountryList(search, 1, defaultPageSize)
            });
            $("#btn-search").click(function (e) {
                $("#master-loader-list").removeClass("hide");
                $("#property-list").addClass("hide");
                var search = $("#Search").val();
                var defaultPageSize = $("#defaultPageSize").val();
                getCountryList(search, 1, defaultPageSize)
            });

            function getCountryList(search, page, defaultPageSize) {
                $.ajax(
                   {
                       url: "../PropertyMaster/Index",
                       type: "Get",
                       data: { Search: search, page: page, defaultPageSize: defaultPageSize },
                       success: function (html) {
                           $("#ContainerList").html(html);
                       },
                       error: function (jqXhr, textStatus, errorThrown) {
                           alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                       },
                       complete: function () {
                           //   $("#VerifyIdDetailsLoader").addClass("hide");
                           //$("#master-loader-list").addClass("hide");
                           //$("#property-list").removeClass("hide");
                       }
                   });
            }
            function beginPaging(args) {
                // Animate
                $('#grid-list').fadeOut('normal');
            }

            function successPaging() {
                // Animate
                $('#grid-list').fadeIn('normal');
                $('a').tooltip();
            }

            function failurePaging() {
                alert("Could not retrieve list.");
            }

        </script>
    </div>


</div>
<script>
    $(".property-edit").click(function (e) {
        e.preventDefault();
        $("#master-loader-edit").removeClass("hide");
        $("#ContainerAddOrUpdate").hide();
        var propertyId = $(this).data("id");
        $.ajax(
            {
                url: "../PropertyMaster/Edit",
                type: "Get",
                data: { Property_Id: propertyId },
                success: function (html) {
                    $("#ContainerAddOrUpdate").html(html);
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                },
                complete: function () {
                    $("#master-loader-edit").addClass("hide");
                    $("#ContainerAddOrUpdate").show();
                    $("body").scrollTop(0);
                }
            });
    });

    $(".property-delete").click(function (e) {
        debugger;
        e.preventDefault();
        var propertyId = $(this).data("id");

        var r = confirm("Are you sure want to delete?");
        if (r == false) {
            return;
        }
        else {
            $.ajax(
                {
                    url: "../PropertyMaster/Delete",
                    type: "Post",
                    data: { Property_Id: propertyId },
                    success: function (response) {
                        GetPropertyMaster();
                        if (response.Errors == null) {
                            $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                            $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                            $(".result-title").text("Success");
                            $(".result-modal-body span").text(response.Message);
                        }
                        else {
                            $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                            $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                            $(".result-title").text("Failure");
                            $(".result-modal-body span").text(response.Errors);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                        $(".result-title").text("Failure");
                        $(".result-modal-body span").text(masterResultError);
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                        $('#masterResultModal').modal('show');
                    }
                });
        }
    });

</script>