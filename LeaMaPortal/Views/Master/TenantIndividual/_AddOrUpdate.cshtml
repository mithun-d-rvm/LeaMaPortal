
@model LeaMaPortal.Models.TenantIndividualViewModel

@{
    ViewBag.Title = "Create";
    //    Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = null;
}

@*<h2>Create</h2>*@


@using (Html.BeginForm("Create","MasterIndividual", FormMethod.Post,new { @id = "TenantIndividualAddOrUpdate", @enctype = "multipart/form-data" }))

{
    @*@Html.AntiForgeryToken()*@

    @*<div class="form-horizontal">*@

    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6">

            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Title:*@
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                   
                        @Html.HiddenFor(model => model.Title)
                        @Html.DropDownList("TitleDisplay",null, new { @class = "form-control master-form-input" })
                    
                </div >
            </div >
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Middle_Name, htmlAttributes: new { @class = "control-label" })
                    @*Middle Name:*@
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Middle_Name, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Middle_Name, "", new { @class = "text-danger" })
                    @*<input type="text" class="form-control master-form-input" />*@
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Company Name/ Educational Institute:*@
                    @Html.LabelFor(model => model.Company_Educational, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Company_Educational, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Company_Educational, "", new { @class = "text-danger" })
                    @*<input type="text" class="form-control master-form-input" />*@
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Marital Status*@
                    @Html.LabelFor(model => model.Marital_Status, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">

                    @Html.RadioButtonFor(model => model.Marital_Status, "Family") Family
                    @Html.RadioButtonFor(model => model.Marital_Status, "Single") Single
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Address 01:*@
                    @Html.LabelFor(model => model.address1, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.address1, new { @class = "form-control master-form-input", @rows = "4" })
                    @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*City:*@
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                  
                    @Html.DropDownList("City", null,htmlAttributes: new { @class = "form-control master-form-input" })



                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Email:*@
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Landline:*@
                    @Html.LabelFor(model => model.Landline_No, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Landline_Countrycode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Landline_Countrycode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Landline_Areacode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Landline_Areacode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6" style="margin-left: 32%;
                width: 64%;
                position: absolute;">
                        @Html.EditorFor(model => model.Landline_No, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Landline_No, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Nationality:*@
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                   

                    @Html.DropDownList("Nationality",null, htmlAttributes: new { @class = "form-control master-form-input" })

                    
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Emirate Issue Date:*@
                    @Html.LabelFor(model => model.Emirate_issuedate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <!--Need to change as Datetime field-->
                    @Html.EditorFor(model => model.Emirate_issuedate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Emirate_issuedate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Passport Number:*@
                    @Html.LabelFor(model => model.Passportno, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Passportno, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Passportno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Passport Issue Date:*@
                    @Html.LabelFor(model => model.Passport_Issuedate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Passport_Issuedate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Passport_Issuedate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Visa Type:*@
                    @Html.LabelFor(model => model.VisaType, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("VisaType", null, "-Select-", htmlAttributes: new { @class = "form-control", @placeholder = "-Select-", })
                    @Html.ValidationMessageFor(model => model.VisaType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Visa Expiry Date:*@
                    @Html.LabelFor(model => model.Visa_ExpiryDate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Visa_ExpiryDate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Visa_ExpiryDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Family Number:*@
                    @Html.LabelFor(model => model.Familyno, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Familyno, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Familyno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*ADWEA Resigtration Id:*@
                    @Html.LabelFor(model => model.ADWEA_Regid, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ADWEA_Regid, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.ADWEA_Regid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">

            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Tenant ID:*@
                    @Html.LabelFor(model => model.Tenant_Id, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.HiddenFor(model => model.Tenant_Id)
                    <input type="text" value="@ViewBag.Tenant_Id" class="form-control master-form-input" />
                    @*@Html.EditorFor(model => model.Tenant_Id, new { htmlAttributes = new { @class = "form-control master-form-input" } })*@
                    @Html.ValidationMessageFor(model => model.Tenant_Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*First Name:*@
                    @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Last Name:*@
                    @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Profession:*@
                    @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("Profession",null, htmlAttributes: new { @class = "form-control master-form-input" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Address:*@
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.address, new { @class = "form-control master-form-input", @rows = "4" })
                    @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Emirate:*@
                    @Html.LabelFor(model => model.Emirate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("Emirate", null, "-Select-", htmlAttributes: new { @class = "form-control", @placeholder = "-Select-", })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Post Box:*@
                    @Html.LabelFor(model => model.PostboxNo, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PostboxNo, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.PostboxNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Mobile:*@
                    @Html.LabelFor(model => model.Mobile_No, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Mobile_Countrycode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Mobile_Countrycode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Mobile_Areacode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Mobile_Areacode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6" style="margin-left: 32%;
                width: 64%;
                position: absolute;">
                        @Html.EditorFor(model => model.Mobile_No, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Mobile_No, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Fax:*@
                    @Html.LabelFor(model => model.Fax_No, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Fax_Countrycode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Fax_Countrycode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3" style="margin-left: -15px;">
                        @Html.EditorFor(model => model.Fax_Areacode, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Fax_Areacode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6" style="margin-left: 32%;
                width: 64%;
                position: absolute;">
                        @Html.EditorFor(model => model.Fax_No, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Fax_No, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Emirates ID:*@
                    @Html.LabelFor(model => model.Emiratesid, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Emiratesid, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Emiratesid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Emirates Expiry Date:*@
                    @Html.LabelFor(model => model.Emirate_expirydate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Emirate_expirydate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Emirate_expirydate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Place of Insurance:*@
                    @Html.LabelFor(model => model.Placeofissuance, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Placeofissuance, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Placeofissuance, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Passport Expiry Date:*@
                    @Html.LabelFor(model => model.Passport_Expirydate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Passport_Expirydate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Passport_Expirydate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Visa Issue Date:*@
                    @Html.LabelFor(model => model.Visa_IssueDate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Visa_IssueDate, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Visa_IssueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Date of Birth:*@
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-12 form-input-padding">
                <div class="col-md-4">
                    @*Family Book City:*@
                    @Html.LabelFor(model => model.Familybookcity, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Familybookcity, new { htmlAttributes = new { @class = "form-control master-form-input" } })
                    @Html.ValidationMessageFor(model => model.Familybookcity, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        

            @if (Model.TenantDocumentList != null)
                {
                <div class="m-t-5-p col-md-10 document-row" id="GridView">
                    <div class="">
                        @if (Model.TenantDocumentList.Count > 0)
                    {<span style="text-transform: uppercase;font-weight: bold;">Existing Documents</span>}
                        <table class="col-md-12" id="exist-file-list">
                            @for (int i = 0; i < Model.TenantDocumentList.Count; i++)
                        {
                            <tr>
                                <td class="col-md-4 p-t-25">
                                    @Html.HiddenFor(m => m.TenantDocumentList[i].id,new {@data_name= "id" })
                                    @Html.HiddenFor(m => m.TenantDocumentList[i].Doc_Path, new { @data_name = "Doc_Path" })
                                    @Html.HiddenFor(m => m.TenantDocumentList[i].Doc_name, new { @data_name = "Doc_name" })
                                    @Model.TenantDocumentList[i].Doc_name
                                </td>
                                <td class="col-md-4 p-t-25"><a href="~/Documents/TenantIndividual/@Model.TenantDocumentList[i].Doc_Path" target="_blank">Download</a></td>
                                <td class="col-md-2 p-t-25">
                                    <button type="button" class="remove-exist-file document-btn" title="Remove this row"> Delete </button>
                                </td>
                            </tr>
                        }
                        </table>
                    </div>
                    <div class="clearfix"><br /></div>
                </div>
                    <div class="row ht-5">
                        &nbsp;
                    </div>
            }

                
            <div class="m-t-5-p col-md-10 document-row" id="GridView">

            <table class="col-md-12">
                <tr>
                    <td class="col-md-4" style="text-transform: uppercase;font-weight: bold;"> Content Name </td>
                    <td class="col-md-4" style="text-transform: uppercase;font-weight: bold;"> Document </td>
                    <td class="col-md-2"> <input type="button" id="addbutton" class="document-btn" value="Add" /> </td>
                </tr>
            </table>
            @*<div class="col-md-12">
                <div class="col-md-4 text-left">Content Name</div>
                <div class="col-md-4 text-left">Document</div>
                <div class="col-md-2 text-left"><input type="button" id="addbutton" class="document-btn" value="Add" /></div>
            </div>*@
            <div class="clearfix"><br /><br /></div>
               


                        <table id="tblcontent" class="col-md-12">
                            <tr>

                                <td class="col-md-4 p-t-25">
                                    <input type="text" id="txtTitle" name="TenantDocument[0].Name" data-name="Name">
                                </td>
                                <td class="col-md-4 p-t-25">
                                    <input type="file" id="txtLink" name="TenantDocument[0].File" data-name="File">
                                </td>
                                <td class="col-md-2 p-t-25">
                                    <button type="button" class="removebutton document-btn" title="Remove this row"> Delete </button>
                                </td>
                            </tr>
                        </table>

                    </div>

        <div class="col-md-12 form-input-padding">
            <div class="col-md-4">
                &nbsp;
            </div>
            <div class="col-md-4">
                <button class="btn master-form-btn" type="submit">Submit</button>
                <div class="col-md-1 pull-left"><br /><br /> <img src="~/Images/loader.gif" class="fa hide" id="img-add-or-update-loader" /></div>
            </div>
        </div>

    </div>
                        }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
   
    var i = 1;

    $("#addbutton").click(function () {
        var j = 0;
        $("table#tblcontent tr:first").clone().find("input").each(function () {
            if (j == 0)
            {
                $(this).val('').attr({
                    'id': function (_, id) {
                        return id + i
                    },
                    'name': function (_, name) {
                        //return name + i
                        return 'TenantDocument[' + i + '].Name'
                    },
                    'value': ''
                });
            }
            else if (j == 1)
            {
                $(this).val('').attr({
                    'id': function (_, id) {
                        return id + i
                    },
                    'name': function (_, name) {
                        //return name + i
                        return 'TenantDocument[' + i + '].File'
                    },
                    'value': ''
                });
            }
            else
            {
                $(this).val('').attr({
                    'id': function (_, id) {
                        return id + i
                    },
                    'name': function (_, name) {
                        return name + i
                        //return 'doc[' + i + '].Filename'
                    },
                    'value': ''
                });
            }
           
            j++;
        }).end().appendTo("#tblcontent");
        i++;
    });

    $(document).on('click', 'button.removebutton', function () {
        $(this).closest('tr').remove();
        var existfilelist = document.getElementById('tblcontent');
        var newindex = 0;
        $(existfilelist).find('> tbody > tr').each(function () {
           
            $(this).find("input").each(function () {
                var dataname = $(this).data("name");
                $(this).attr({
                    'id': function (_, id) {
                        return id + newindex
                    },
                    'name': function (_, name) {
                        //return name + iTenantDocument[0].Name
                        return 'TenantDocument[' + newindex + '].' + dataname
                    }
                });
            });
            newindex++;
           
        });
        i = newindex;
        return false;
    });
    $(document).on('click', 'button.remove-exist-file', function () {
        $(this).closest('tr').remove();
        var existfilelist = document.getElementById('exist-file-list');
        var newindex = 0;
        $(existfilelist).find('> tbody > tr').each(function () {
                $(this).find("input").each(function () {
                    var dataname = $(this).data("name");
                    $(this).attr({
                        'id': function (_, id) {
                            return id + newindex
                        },
                        'name': function (_, name) {
                            //return name + iTenantDocument[0].Name
                            return 'TenantDocumentList[' + newindex + '].' + dataname
                        }
                    });
                });
            newindex++;
        });
        return false;
    });
    
    $("#TitleDisplay").on('change', function (e) {
        $("#Title").val($("#TitleDisplay").val());
    });
    $("form#TenantIndividualAddOrUpdate").off("submit").on("submit", function (e) {
        $("#img-add-or-update-loader").removeClass("hide");
        return;
        e.preventDefault();
        try {
            var form = $("form#TenantIndividualAddOrUpdate");
            $.ajax(
                {
                    url: "../MasterIndividual/Create",
                    // dataType: "jsonp",
                    method: "POST",
                    data: JSON.stringify($(form).serializeObject()), //FormData(form.get(0)),
                    contentType: "application/json",
                    processData: false,
                    success: function (response) {
                        if (response.Errors ==null||response.Errors =="") {
                            GetTenantIndividual();
                        }
                        else {
                            alert(response.Errors);
                        }

                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        $("#img-add-or-update-loader").addClass("hide");
                    }

                });

        }
        catch (ex) {
            alert(ex);
        }


    });

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };
</script>