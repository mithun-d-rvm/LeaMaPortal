<!--
  File Name      : _AgreementForm.cshtml
  Description    : Agreement Details partial view
  Created Date   : 25-Mar-2017
  Notes          : <Notes>
-->

@model LeaMaPortal.Models.AgreementFormViewModel
@using (Html.BeginForm("AddOrUpdate", "Tca", FormMethod.Post, new { @id = "Tca", @enctype = "multipart/form-data" }))
{

    <div class="font-smaller">
        <div class="text-uppercase font-x-large">
            <strong> Agreement </strong>
        </div>
        <div class="p-b-25"> &nbsp; </div>
        <div class="row">
            <div class="col-md-6 ht-50">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-3 m-t-3">
                        <span> Single Unit </span>
                    </div>
                    <div class="col-md-1">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Single", new { @Name = "SingleMultipleFlag", @class = "input-checkbox" })
                    </div>
                    <div class="col-md-4 m-t-3">
                        <span> Multiple Unit </span>
                    </div>
                    <div class="col-md-1 m-l-m-40">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Multiple", new { @Name = "SingleMultipleFlag", @class = "input-checkbox" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @*<div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            Existing Contract Agreement:
                        </div>
                        <div class="col-md-6">
                            <select class="master-form-input form-control">
                                <option> Agreement 1 </option>
                                <option> Agreement 2 </option>
                                <option> Agreement 3 </option>
                            </select>
                        </div>
                    </div>*@
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_No, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.HiddenFor(model => model.Agreement_No)
                        <input type="text" value="@ViewBag.Agreement_No" disabled class="master-form-input" />
                        @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input" } })*@
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input" } })
                        @Html.ValidationMessageFor(model => model.Agreement_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Tenant_Type, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownList("TenantType", null, "-- Select --", new { @class = "master-form-input form-control", @Name = "TenantType" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TenantId", null, new { @class = "master-form-input form-control", @Name = "TenentId" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TenantName", null, new { @class = "master-form-input", @Name = "TenentName" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.property_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaPropertyId", null, new { @class = "master-form-input" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Property_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaPropertyIDTawtheeq", null, new { @class = "master-form-input" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Properties_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaPropertyName", null, new { @class = "master-form-input" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="UnitPropertyId">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("UnitIDTawtheeq", null, new { @class = "master-form-input", @Name = "UnitIDTawtheeq" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="UnitPropertyName">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("UnitPropertyName", null, new { @class = "master-form-input", @Name = "UnitPropertyName" })
                    </div>
                </div>
            </div>



            <div class="col-md-6">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Vacantstartdate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Vacantstartdate, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Start_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_Start_Date, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_End_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_End_Date, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Total_Rental_amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Total_Rental_amount, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Perday_Rental, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Perday_Rental, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.nofopayments, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.nofopayments, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Advance_Security_Amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Advance_Security_Amount, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_Flag, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<select class="master-form-input form-control">
                                <option> Payment 1 </option>
                                <option> Payment 2 </option>
                                <option> Payment 3 </option>
                            </select>*@
                        @Html.DropDownList("SecurityFlag", null, new { @class = "master-form-input", @Name = "SecurityFlag" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequeno, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequeno, new { htmlAttributes = new { @class = "master-form-input", @Name = "SecurityChequeno", disabled = "disabled" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequedate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequedate, new { htmlAttributes = new { @class = "master-form-input", @Name = "SecurityChequedate", disabled = "disabled" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Notice_Period, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Notice_Period, new { htmlAttributes = new { @class = "master-form-input" } })
                    </div>
                </div>

            </div>
        </div>
        <div class="p-t-5-p">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT PDC -->
        <div class="p-lr-20" id="AgreementPdc">
            @*@Html.Partial("_AgreementPdc")*@
        </div>
        <!-- END AGREEMENT PDC -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT DOCUMENT -->
        <div class="p-lr-20" id="AgreementDocument">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT DOCUMENT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT UTILITY -->
        <div class="p-lr-20" id="AgreementUtility">
            @*@Html.Partial("_AgreementUtility")*@
        </div>
        <!-- END AGREEMENT UTILITY -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementUnit">
            @*@Html.Partial("_AgreementUnit")*@
        </div>
        <!-- END AGREEMENT UNIT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementCheckList">
            @*@Html.Partial("_AgreementCheckList")*@
        </div>
        @*END AGREEMENT UNIT*@
        <div class="p-b-10">
            &nbsp;
        </div>
        <div class="col-md-12 form-input-padding">
            <div class="col-md-6">
                &nbsp;
            </div>
            <div class="col-md-4">
                <input type="submit" class="btn master-form-btn" value="Submit" />
            </div>
        </div>
    </div>
}
<script>
    $('input[type=radio][name=SingleMultipleFlag]').change(function () {
        debugger;
        if (this.value == 'Multiple') {
            //$('#UnitIDTawtheeq').attr('disabled', true);
            //$('#UnitPropertyName').attr('disabled', true);
            $("#UnitPropertyId").hide();
            $("#UnitPropertyName").hide();
        }
        else {
            //$('#UnitIDTawtheeq').removeAttr('disabled');
            //$('#UnitPropertyName').removeAttr('disabled');
            $("#UnitPropertyId").show();
            $("#UnitPropertyName").show();
        }
        //$.ajax(
        //       {
        //           url: "../Tca/GetPropertyDetails",
        //           // dataType: "jsonp",
        //           method: "GET",
        //           data: { Type: this.value }, //FormData(form.get(0)),
        //           contentType: "application/json",

        //           success: function (response) {
        //               debugger;
        //               if (response != null) {
        //                   $("#TenantId").empty();
        //                   $("#TenantName").empty();
        //                   for (var i = 0; i < response.TenantId.length; i++) {
        //                       var option = $("<option/>");
        //                       option.attr("value", response.TenantId[i].Value).text(response.TenantId[i].Text);
        //                       $("#TenantId").append(option);
        //                   }
        //                   for (var i = 0; i < response.TenantName.length; i++) {
        //                       var option = $("<option/>");
        //                       option.attr("value", response.TenantName[i].Value).text(response.TenantName[i].Text);
        //                       $("#TenantName").append(option);
        //                   }
        //                   //$("#TenentId").val(response.TenentId);
        //                   //$("#TenentName").val(response.TenentName);
        //               }
        //           },
        //           error: function (jqXhr, textStatus, errorThrown) {
        //               alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
        //           },
        //           complete: function () {
        //               // $("#").addClass("hide");
        //           }

        //       });
    });

    $("#TenantType").on('change', function (e) {
        debugger;
        var TenantType = $("#TenantType").val();
        if (TenantType != "" && TenantType != null) {
            $.ajax(
                {
                    url: "../Tca/GetTenentDetails",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { Type: $("#TenantType").val() }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                        debugger;
                        if (response != null) {
                            $("#TenantId").empty();
                            $("#TenantName").empty();
                            for (var i = 0; i < response.TenantId.length; i++) {
                                var option = $("<option/>");
                                option.attr("value", response.TenantId[i].Value).text(response.TenantId[i].Text);
                                $("#TenantId").append(option);
                            }
                            for (var i = 0; i < response.TenantName.length; i++) {
                                var option = $("<option/>");
                                option.attr("value", response.TenantName[i].Value).text(response.TenantName[i].Text);
                                $("#TenantName").append(option);
                            }
                            //$("#TenentId").val(response.TenentId);
                            //$("#TenentName").val(response.TenentName);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
        }
    });

    $("#SecurityFlag").change(function () {
        debugger;
        var SecurityFlag = $("#SecurityFlag").val();
        if (SecurityFlag != undefined && (SecurityFlag == "Cheque" || SecurityFlag == "Online" || SecurityFlag == "Cheque without date")) {
            $('#Security_chequeno').removeAttr('disabled');
            $('#Security_chequedate').removeAttr('disabled');
            //$("SecurityChequeno").prop("disabled", false);
            //$("SecurityChequedate").prop("disabled", false);
        }
        else {
            $('#Security_chequeno').attr('disabled', true);
            $('#Security_chequedate').attr('disabled', true);
        }
        return;
    });

    $("#TenantId").change(function () {
        $("#TenantName").val($("#TenantId option:selected").text());
        return;
    });
    $("#TenantName").change(function () {
        $("#TenantId").val($("#TenantName option:selected").text());
        return;
    });
</script>

