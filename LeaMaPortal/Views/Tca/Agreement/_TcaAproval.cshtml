<!--
  File Name      : _AgreementForm.cshtml
  Description    : Agreement Details partial view
  Created Date   : 25-Mar-2017
  Notes          : <Notes>
-->

@model LeaMaPortal.Models.AgreementFormViewModel
@using (Html.BeginForm("AddOrUpdate", "Tca", FormMethod.Post, new { @id = "TcaRenewal", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.Ag_Tenant_id)
    @Html.HiddenFor(x => x.Ag_Tenant_Name)
    @Html.HiddenFor(x => x.property_id)
    @Html.HiddenFor(x => x.Property_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Properties_Name)
    @Html.HiddenFor(x => x.Unit_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Unit_Property_Name)
    @Html.HiddenFor(x => x.Caretaker_id)
    @Html.HiddenFor(x => x.Caretaker_Name)
    @Html.HiddenFor(x => x.Agreement_No)
    @*@Html.HiddenFor(x => x.Tenant_Type)*@
    <div class="font-smaller">
        @Html.HiddenFor(m => m.New_Renewal_flag)
        <button type="button" class="close font-40" data-dismiss="modal"> &times;</button>
        <div class="text-uppercase popup-heading">
            Contract Tenancy Agreement - Aproval
        </div>
        <div class="p-b-25"> &nbsp; </div>
        <div class="row" style="pointer-events: none;">
            <div class="col-md-6 ht-50">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-3 m-t-3">
                        <span> Single Unit </span>
                    </div>
                    <div class="col-md-1">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Single", new { @class = "input-checkbox", @required = "required", @id = "single", @readonly = "readonly" })
                    </div>
                    <div class="col-md-4 m-t-3">
                        <span> Multiple Unit </span>
                    </div>
                    <div class="col-md-1 m-l-m-40">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Multiple", new { @class = "input-checkbox", @required = "required", @id = "multiple", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @*<div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            Existing Contract Agreement:
                        </div>
                        <div class="col-md-6">
                            <select class="master-form-input form-control">
                                <option> Agreement 1 </option>
                                <option> Agreement 2 </option>
                                <option> Agreement 3 </option>
                            </select>
                        </div>
                    </div>*@
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_No, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">

                        @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input form-control",@readonly = "readonly"} })*@
                        <input type="text" value="@Model.Agreement_No" class="master-form-input form-control" disabled />
                        @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input" } })*@
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                        @Html.ValidationMessageFor(model => model.Agreement_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Tenant_Type, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownList("Tenant_Type", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @*@Html.DropDownList("Ag_Tenantid", null, "-- Select --", new { @class = "master-form-input form-control", @Name = "Ag_Tenant_id", @required = "required",@disabled= "disabled" })*@
                        @Html.EditorFor(model => model.Ag_Tenant_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.EditorFor(model => model.Ag_Tenant_Name, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Caretaker_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("Caretakerid", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Caretaker_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("CaretakerName", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.property_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        <input type="text" value="@Model.property_id" class="master-form-input form-control" disabled />

                        @*@Html.EditorFor(model => model.property_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })*@
                        @*@Html.DropDownList("TcaPropertyId", null, "-- Select --", new { @class = "master-form-input" })*@
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Property_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaPropertyIDTawtheeq", null, "-- Select --", new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Properties_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaPropertyName", null, "-- Select --", new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="UnitPropertyId">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("UnitIDTawtheeq", null, "-- Select --", new { @class = "master-form-input form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="Unitpropertyname">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("UnitPropertyName", null, "-- Select --", new { @class = "master-form-input form-control", @readonly = "readonly" })
                    </div>
                </div>
            </div>



            <div class="col-md-6">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Vacantstartdate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Vacantstartdate, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Start_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_Start_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_End_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_End_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Total_Rental_amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Total_Rental_amount, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'TcaRenewal #Total_Rental_amount');" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Perday_Rental, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Perday_Rental, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'TcaRenewal #Perday_Rental');", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.nofopayments, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.nofopayments, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Advance_Security_Amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Advance_Security_Amount, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_Flag, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<select class="master-form-input form-control">
                                <option> Payment 1 </option>
                                <option> Payment 2 </option>
                                <option> Payment 3 </option>
                            </select>*@
                        @Html.DropDownList("SecurityFlag", null, new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequeno, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequeno, new { htmlAttributes = new { @class = "master-form-input form-control", @Name = "SecurityChequeno", disabled = "disabled" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequedate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequedate, new { htmlAttributes = new { @class = "master-form-input form-control", @Name = "SecurityChequedate", disabled = "disabled" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Notice_Period, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Notice_Period, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);" } })
                    </div>
                </div>

            </div>
        </div>
        <div class="p-t-5-p">
            &nbsp;
        </div>

        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementUnitR">
            @*@Html.Partial("_AgreementUnit")*@
        </div>
        <!-- END AGREEMENT UNIT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT PDC -->
        <div class="p-lr-20" id="AgreementPdcR">
            @*@Html.Partial("_AgreementPdc")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT Facility -->
        <div class="p-lr-20" id="AgreementFacilityR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <!-- END AGREEMENT PDC -->
        <div class="row ht-5">
            &nbsp;
        </div>

        <!-- BEGIN AGREEMENT UTILITY -->
        <div class="p-lr-20" id="AgreementUtilityR">
            @*@Html.Partial("_AgreementUtility")*@
        </div>
        <!-- END AGREEMENT UTILITY -->
        <div class="row ht-5">
            &nbsp;
        </div>

        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementCheckListR">
            @*@Html.Partial("_AgreementCheckList")*@
        </div>
        @*END AGREEMENT UNIT*@
        <div class="p-b-10">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT DOCUMENT -->
        <div class="p-lr-20" id="AgreementDocumentR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT DOCUMENT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <div class="col-md-12 form-input-padding">
            <div class="col-md-3">
                &nbsp;
            </div>
            <div class="col-md-2">
                <input type="button" class="btn master-form-btn tca-approve" data-dismiss="modal" data-agreementno="@Model.Agreement_No" value="Aprove" />
            </div>
            <div class="col-md-1">&nbsp;</div>
            <div class="col-md-2">
                <input type="button" class="btn master-form-btn tca-reject" data-dismiss="modal" data-agreementno="@Model.Agreement_No" value="Reject" />
            </div>
            <div class="col-md-3">
                &nbsp;
            </div>
        </div>
    </div>
}
<script>


    

    $(document).ready(function () {
         
        if ($("#TcaRenewal #single")[0].checked) {
            $("#TcaRenewal #single").prop('checked', true).change();
            //$("select option").prop("selected", false);
        }
        else {
            $("#TcaRenewal #multiple").prop('checked', true).change();
            //$("select option").prop("selected", false);
        }
        //$("#TcaRenewal #property").prop('checked', true).change();
    });
    $("#TcaRenewal #Agreement_Start_Date").change(function () {
        setContractAmountPerDayRenewal();
    });
    $("#TcaRenewal #Agreement_End_Date").change(function () {
        setContractAmountPerDayRenewal();
    });
    $("#TcaRenewal #Total_Rental_amount").change(function () {
        setContractAmountPerDayRenewal();
    });
    
    function setContractAmountPerDayRenewal() {
        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
        var firstDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
        var secondDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
        var Total_Rental_amount = parseFloat($("#TcaRenewal #Total_Rental_amount").val());
        var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));
        var amountperday = 0.0;
        if (firstDate < secondDate) {
            if (diffDays > 0) {
                amountperday = (Total_Rental_amount / (diffDays + 1)).toFixed(2);
            }
        }
        else if (firstDate.getDate() == secondDate.getDate()) {
            amountperday = Total_Rental_amount;
        }

        $("#TcaRenewal #Perday_Rental").val(amountperday);
    }
    //setContractAmountPerDay();
</script>

<script>
    $("form#TcaRenewal").off("submit").on("submit", function (e) {
         e.preventDefault();
        try {
            var firstDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
            var secondDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
            if (firstDate.getDate() > secondDate.getDate()) {
                e.preventDefault();
                $("#TcaRenewal #Agreement_End_Date").focus();
                alert("Agreement Start Date less than or equal to Agreement End Date");

            }
        }
        catch (ex) {
            alert(ex);
        }

    });
    function AgreementApproved(AgreementNo) {
        //$("#img-loader").removeClass("hide");
        $.ajax(
        {
            url: "../Tca/TcaApprove",
            type: "Get",
            data: { AgreementNo: AgreementNo },
            //contentType: "application/json",
            //processData: false,
            success: function (html) {
                //alert("Agreement approved successfully");
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                $(".result-title").text("Success");
                $(".result-modal-body span").text("TCA approved successfully");
            },
            error: function (jqXhr, textStatus, errorThrown) {
                //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                $(".result-title").text("Failure");
                $(".result-modal-body span").text(masterResultError);
            },
            complete: function () {
                $('#masterResultModal').modal('show');
                $(".notification-filter-content").empty();
                getData("TCA approval");
            }
        });
    }
    function AgreementRejected(AgreementNo) {
        //$("#img-loader").removeClass("hide");
        $.ajax(
        {
            url: "../Tca/TcaReject",
            type: "Get",
            data: { AgreementNo: AgreementNo },
            //contentType: "application/json",
            //processData: false,
            success: function (html) {
                //alert("Agreement rejected successfully");
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                $(".result-title").text("Success");
                $(".result-modal-body span").text("TCA rejected successfully");
            },
            error: function (jqXhr, textStatus, errorThrown) {
                //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                $(".result-title").text("Failure");
                $(".result-modal-body span").text(masterResultError);
            },
            complete: function () {
                $('#masterResultModal').modal('show');
                $(".notification-filter-content").empty();
                getData("TCA approval");
            }
        });
    }
    $(".tca-approve").click(function (e) {
        // $("#img-loader").removeClass("hide");
        e.preventDefault();
        var id = $(this).data("agreementno");
        AgreementApproved(id);
       
    });
    $(".tca-reject").click(function (e) {
        // $("#img-loader").removeClass("hide");
        e.preventDefault();
        var id = $(this).data("agreementno");
        AgreementRejected(id);
      
    });
</script>