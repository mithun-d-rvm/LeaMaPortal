<!--
  File Name      : _AgreementForm.cshtml
  Description    : Agreement Details partial view
  Created Date   : 25-Mar-2017
  Notes          : <Notes>
-->

@model LeaMaPortal.Models.AgreementFormViewModel
@using (Html.BeginForm("AddOrUpdate", "Tca", FormMethod.Post, new { @id = "TcaRenewal", @enctype = "multipart/form-data" }))
{

    @Html.HiddenFor(x => x.Ag_Tenant_id)
    @Html.HiddenFor(x => x.Ag_Tenant_Name)
    @Html.HiddenFor(x=>x.property_id)
    @Html.HiddenFor(x => x.Property_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Properties_Name)
    @Html.HiddenFor(x => x.Unit_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Unit_Property_Name)
    @*@Html.HiddenFor(x => x.Caretaker_id)
    @Html.HiddenFor(x => x.Caretaker_Name)*@
    @Html.HiddenFor(x=>x.Agreement_No)
    @Html.HiddenFor(x => x.Tenant_Type)
    @Html.HiddenFor(x => x.Security_Flag)
    @Html.HiddenFor(x => x.Security_chequeno)
    @Html.HiddenFor(x => x.Security_chequedate)

    <div class="font-smaller">
        @Html.HiddenFor(m => m.New_Renewal_flag)
        <button type="button" class="close font-40"  onclick="javascript:window.location.reload()" data-dismiss="modal"> &times;</button>
        <div class="text-uppercase popup-heading">
            Contract Tenancy Agreement - Renewal
        </div>
        <div class="p-b-25"> &nbsp; </div>
        <div class="row" style="pointer-events: none;">
            <div class="col-md-6 ht-50">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-3 m-t-3">
                        <span> Single Unit </span>
                    </div>
                    <div class="col-md-1">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Single", new { @class = "input-checkbox", @required = "required", @id = "single", @readonly = "readonly" })
                    </div>
                    <div class="col-md-4 m-t-3">
                        <span> Multiple Unit </span>
                    </div>
                    <div class="col-md-1 m-l-m-40">
                        @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Multiple", new { @class = "input-checkbox", @required = "required", @id = "multiple", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @*<div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            Existing Contract Agreement:
                        </div>
                        <div class="col-md-6">
                            <select class="master-form-input form-control">
                                <option> Agreement 1 </option>
                                <option> Agreement 2 </option>
                                <option> Agreement 3 </option>
                            </select>
                        </div>
                    </div>*@
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Refno, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        <input type="text" value="@Model.Agreement_Refno" class="master-form-input form-control" disabled />
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_No, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                       
                        @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input form-control",@readonly = "readonly"} })*@  
                        <input type="text" value="@Model.Agreement_No"  class="master-form-input form-control" disabled />
                        @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input" } })*@
                    </div>
                </div>
               
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        @Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                        @Html.ValidationMessageFor(model => model.Agreement_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Tenant_Type, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownList("TenantType", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @*@Html.DropDownList("Ag_Tenantid", null, "-- Select --", new { @class = "master-form-input form-control", @Name = "Ag_Tenant_id", @required = "required",@disabled= "disabled" })*@
                        @Html.EditorFor(model => model.Ag_Tenant_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Ag_Tenant_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                       @Html.EditorFor(model => model.Ag_Tenant_Name, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Caretaker_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @*@Html.DropDownList("Caretakerid", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly" })*@
                        @Html.EditorFor(model => model.Caretaker_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Caretaker_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @*@Html.DropDownList("CaretakerName", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required", @readonly = "readonly" })*@
                        @Html.EditorFor(model => model.Caretaker_Name, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.property_id, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        <input type="text" value="@Model.property_id" class="master-form-input form-control" disabled />
                        
                        @*@Html.EditorFor(model => model.property_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })*@
                        @*@Html.DropDownList("TcaPropertyId", null, "-- Select --", new { @class = "master-form-input" })*@
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Property_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaRenewalPropertyIDTawtheeq", null, new { @class = "master-form-input form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Properties_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaRenewalPropertyName", null, new { @class = "master-form-input form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="UnitPropertyId">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaRenewalUnitIDTawtheeq", null, new { @class = "master-form-input form-control", @readonly = "readonly", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7" id="Unitpropertyname">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Unit_Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<input type="text" class="master-form-input form-control" />*@
                        @Html.DropDownList("TcaRenewalUnitPropertyName", null, new { @class = "master-form-input form-control", @readonly = "readonly", @disabled = "disabled" })
                    </div>
                </div>
            </div>



            <div class="col-md-6">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Vacantstartdate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Vacantstartdate, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_Start_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_Start_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Agreement_End_Date, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Agreement_End_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Total_Rental_amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Total_Rental_amount, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'TcaRenewal #Total_Rental_amount');" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Perday_Rental, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Perday_Rental, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'TcaRenewal #Perday_Rental');" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.nofopayments, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.nofopayments, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);", @min = "0" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Advance_Security_Amount, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Advance_Security_Amount, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_Flag, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @*<select class="master-form-input form-control">
                                <option> Payment 1 </option>
                                <option> Payment 2 </option>
                                <option> Payment 3 </option>
                            </select>*@
                        @Html.DropDownList("TcaRenewalSecurityFlag", null, new { @class = "master-form-input form-control" })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequeno, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequeno, new { htmlAttributes = new { @class = "master-form-input form-control",@disabled = "disabled", @Name = "SecurityChequeno", @id = "SecurityChequeno" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Security_chequedate, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Security_chequedate, new { htmlAttributes = new { @class = "master-form-input form-control",@disabled = "disabled", @Name = "SecurityChequedate", @id = "SecurityChequedate" } })
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Notice_Period, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Notice_Period, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);", @min = "0" } })
                    </div>
                </div>

            </div>
        </div>
        <div class="p-t-5-p">
            &nbsp;
        </div>

        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementUnitR">
            @*@Html.Partial("_AgreementUnit")*@
        </div>
        <!-- END AGREEMENT UNIT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT PDC -->
        <div class="p-lr-20" id="AgreementPdcR">
            @*@Html.Partial("_AgreementPdc")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT Facility -->
        <div class="p-lr-20" id="AgreementFacilityR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <!-- END AGREEMENT PDC -->
        <div class="row ht-5">
            &nbsp;
        </div>
        
        <!-- BEGIN AGREEMENT UTILITY -->
        <div class="p-lr-20" id="AgreementUtilityR">
            @*@Html.Partial("_AgreementUtility")*@
        </div>
        <!-- END AGREEMENT UTILITY -->
        <div class="row ht-5">
            &nbsp;
        </div>
       
        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementCheckListR">
            @*@Html.Partial("_AgreementCheckList")*@
        </div>
        @*END AGREEMENT UNIT*@
        <div class="p-b-10">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT DOCUMENT -->
        <div class="p-lr-20" id="AgreementDocumentR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT DOCUMENT -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <div class="col-md-12 form-input-padding">
            <div class="col-md-6">
                &nbsp;
            </div>
            <div class="col-md-4">
                <input type="submit" class="btn master-form-btn" value="Submit" id="btnRenewalSubmit" />
            </div>
        </div>
    </div>
}
<script>
    sigleOrMultiple();
    function sigleOrMultiple() {
        var single_multiple = $('input[name=radioName]:checked', '#TcaRenewal').val();
        if (single_multiple == 'Multiple') {
            //$('#UnitIDTawtheeq').attr('disabled', true);
            //$('#UnitPropertyName').attr('disabled', true);
            $("#TcaRenewal #TcaRenewalUnitIDTawtheeq").hide();
            $("#TcaRenewal #TcaRenewalUnitPropertyName").hide();
            $("#AgreementUnitR").show();

        }
        else {
            //$('#editAgreementForm #UnitIDTawtheeq').removeAttr('disabled');
            //$('#editAgreementForm #UnitPropertyName').removeAttr('disabled');
            $("#TcaRenewal #TcaRenewalUnitIDTawtheeq").show();
            $("#TcaRenewal #TcaRenewalUnitPropertyName").show();
            $("#AgreementUnitR").hide();
        }
    }

    $("#TcaRenewal #Tenant_Type").on('change', function (e) {
         
        var Tenant_Type = $("#TcaRenewal #Tenant_Type").val();
        $("#TcaRenewal #Ag_Tenant_id").val(null);
        $("#TcaRenewal #Ag_Tenant_Name").val(null);
        if (Tenant_Type != "" && Tenant_Type != null) {
            $.ajax(
                {
                    url: "../Tca/GetTenentDetails",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { Type: $("#TcaRenewal #Tenant_Type").val() }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                         
                        if (response != null) {
                            $("#TcaRenewal #Ag_Tenantid").empty();
                            $("#TcaRenewal #Ag_TenantName").empty();
                            var tenantIdoptions = '<option value="" selected>--Select--</option>';
                            var tenantNameoptions = '<option value="" selected>--Select--</option>';
                            $.each(response, function (index, data) {
                                tenantIdoptions += '<option value="' + data.Tenant_Id + '">' + data.Tenant_Id + '</option>';
                                tenantNameoptions += '<option value="' + data.Tenant_Id + '">' + data.Tenant_Name + '</option>';
                            });
                            $('#Ag_Tenantid').append(tenantIdoptions);
                            $('#Ag_TenantName').append(tenantNameoptions);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#TcaRenewal #").addClass("hide");
                    }

                });
        }
    });

    $("#TcaRenewal #TcaRenewalSecurityFlag").change(function () {
        var SecurityFlag = $("#TcaRenewal #TcaRenewalSecurityFlag option:selected").text();

        if (SecurityFlag != undefined && (SecurityFlag == "Cheque" || SecurityFlag == "Online" || SecurityFlag == "Cheque without date" || SecurityFlag == "DD")) {
            $('#TcaRenewal #SecurityChequeno').removeAttr('disabled');
            $('#TcaRenewal #SecurityChequedate').removeAttr('disabled');
            //$("SecurityChequeno").prop("disabled", false);
            //$("SecurityChequedate").prop("disabled", false);
        }
        else {
            $('#TcaRenewal #SecurityChequeno').attr('disabled', true);
            $('#TcaRenewal #SecurityChequedate').attr('disabled', true);
        }
        return;
    });

    $("#TcaRenewal #Ag_Tenantid").change(function () {
         
        var tenantid = $("#TcaRenewal #Ag_Tenantid").val();
        $("#TcaRenewal #Ag_TenantName").val($("#TcaRenewal #Ag_Tenantid option:selected").val());

        $("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenantid option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Ag_Tenantid option:selected").text());
        $("#TcaRenewal #Ag_Tenant_Name").val($("#TcaRenewal #Ag_TenantName option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Ag_TenantName option:selected").text());
       // $("#TcaRenewal #Ag_Tenant_Name").val($("#TcaRenewal #Ag_Tenant_id option:selected").text());
        return;
    });
    $("#TcaRenewal #Ag_TenantName").change(function () {
        var tenantid = $("#TcaRenewal #Ag_TenantName").val();
        $("#TcaRenewal #Ag_Tenantid").val($("#TcaRenewal #Ag_TenantName option:selected").val());
        $("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenantid option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Ag_Tenantid option:selected").text());
        $("#TcaRenewal #Ag_Tenant_Name").val($("#TcaRenewal #Ag_TenantName option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Ag_TenantName option:selected").text());
        //$("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenant_Name option:selected").text());
        return;
    });

    $("#TcaRenewal #Caretakerid").change(function () {
        var Caretakerid = $("#TcaRenewal #Caretakerid").val();
        $("#TcaRenewal #CaretakerName").val($("#TcaRenewal #Caretakerid option:selected").val());

        $("#TcaRenewal #Caretaker_id").val($("#TcaRenewal #Caretakerid option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Caretakerid option:selected").text());
        $("#TcaRenewal #Caretaker_Name").val($("#TcaRenewal #CaretakerName option:selected").text() == "--Select--" ? null : $("#TcaRenewal #CaretakerName option:selected").text());

        // $("#TcaRenewal #Ag_Tenant_Name").val($("#TcaRenewal #Ag_Tenant_id option:selected").text());
        return;
    });
    $("#TcaRenewal #CaretakerName").change(function () {
        var Caretakerid = $("#TcaRenewal #CaretakerName").val();
        $("#TcaRenewal #Caretakerid").val($("#TcaRenewal #CaretakerName option:selected").val());

        $("#TcaRenewal #Caretaker_id").val($("#TcaRenewal #Caretakerid option:selected").text() == "--Select--" ? null : $("#TcaRenewal #Caretakerid option:selected").text());
        $("#TcaRenewal #Caretaker_Name").val($("#TcaRenewal #CaretakerName option:selected").text() == "--Select--" ? null : $("#TcaRenewal #CaretakerName option:selected").text());
        //$("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenant_Name option:selected").text());
        return;
    });

    //$("#TcaRenewal #TcaPropertyIDTawtheeq").change(function () {
    //    var propertyid = $("#TcaRenewal #TcaPropertyIDTawtheeq").val();
    //    $("#TcaRenewal #TcaPropertyName").val($("#TcaRenewal #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #UnitIDTawtheeq").val($("#TcaRenewal #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #UnitPropertyName").val($("#TcaRenewal #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #property_id").val(propertyid);
    //    setpropertyFields();
    //    // $("#TcaRenewal #Ag_Tenant_Name").val($("#TcaRenewal #Ag_Tenant_id option:selected").text());
    //    return;
    //});
    //$("#TcaRenewal #TcaPropertyName").change(function () {
    //    var propertyid = $("#TcaRenewal #TcaPropertyName").val();
    //    $("#TcaRenewal #TcaPropertyIDTawtheeq").val($("#TcaRenewal #TcaPropertyName option:selected").val());
    //    $("#TcaRenewal #UnitIDTawtheeq").val($("#TcaRenewal #TcaPropertyName option:selected").val());
    //    $("#TcaRenewal #UnitPropertyName").val($("#TcaRenewal #TcaPropertyName option:selected").val());
    //    $("#TcaRenewal #property_id").val(propertyid);
    //    setpropertyFields();
    //    //$("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    //$("#TcaRenewal #UnitIDTawtheeq").change(function () {
    //    var propertyid = $("#TcaRenewal #UnitIDTawtheeq").val();
    //    $("#TcaRenewal #TcaPropertyIDTawtheeq").val($("#TcaRenewal #UnitIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #TcaPropertyName").val($("#TcaRenewal #UnitIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #UnitPropertyName").val($("#TcaRenewal #UnitIDTawtheeq option:selected").val());
    //    $("#TcaRenewal #property_id").val(propertyid);
    //    setpropertyFields();
    //    //$("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    //$("#TcaRenewal #UnitPropertyName").change(function () {
    //    var propertyid = $("#TcaRenewal #UnitPropertyName").val();
    //    $("#TcaRenewal #TcaPropertyIDTawtheeq").val($("#TcaRenewal #UnitPropertyName option:selected").val());
    //    $("#TcaRenewal #TcaPropertyName").val($("#TcaRenewal #UnitPropertyName option:selected").val());
    //    $("#TcaRenewal #UnitIDTawtheeq").val($("#TcaRenewal #UnitPropertyName option:selected").val());
    //    $("#TcaRenewal #property_id").val(propertyid);
    //    setpropertyFields();
    //    //$("#TcaRenewal #Ag_Tenant_id").val($("#TcaRenewal #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    $(document).ready(function () {
         
        if ($("#TcaRenewal #single")[0].checked) {
            $("#TcaRenewal #single").prop('checked', true).change();
            //$("select option").prop("selected", false);
        }
        else {
            $("#TcaRenewal #multiple").prop('checked', true).change();
            //$("select option").prop("selected", false);
        }
        //$("#TcaRenewal #property").prop('checked', true).change();
    });
    $("#TcaRenewal #Agreement_Start_Date").change(function () {
        setContractAmountPerDayRenewal();
    });
    $("#TcaRenewal #Agreement_End_Date").change(function () {
        setContractAmountPerDayRenewal();
    });
    $("#TcaRenewal #Total_Rental_amount").change(function () {
        setContractAmountPerDayRenewal();
    });
    function setContractAmountPerDayRenewal() {
        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
        var firstDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
        var secondDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
        var Total_Rental_amount = parseFloat($("#TcaRenewal #Total_Rental_amount").val());
        var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));
        //alert(diffDays);
        var amountperday = 0.0;
        if (firstDate < secondDate) {
            if (diffDays > 0) {
                amountperday = (Total_Rental_amount / (diffDays + 1)).toFixed(2);
            }
        }
        else if (firstDate.getDate() == secondDate.getDate()) {
            amountperday = Total_Rental_amount;
        }

        $("#TcaRenewal #Perday_Rental").val(amountperday);
    }
    //setContractAmountPerDay();
    function setContractAmountPerDay() {

        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
        var firstDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
        var secondDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
        var Total_Rental_amount = parseFloat($("#TcaRenewal #Total_Rental_amount").val());
        var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));
        var amountperday = 0.0;
        //debugger;
        if (firstDate < secondDate) {
            if (diffDays > 0) {
                amountperday = (Total_Rental_amount / (diffDays + 1)).toFixed(2);
            }
        }
        else if (firstDate.getDate() == secondDate.getDate()) {
            amountperday = Total_Rental_amount;
        }

        //var PUMonthlyRentPerday = $("#hdnPropUntMonthlyRentPerDay").val();
        //var MinRent = diffDays * PUMonthlyRentPerday;
        //if (Total_Rental_amount > 0) {
        //    if (MinRent > Total_Rental_amount) {
        //        var RentDiff = MinRent - Total_Rental_amount;
        //        if (RentDiff > 50) {
        //            debugger;
        //            //alert("Rental Amount Less than Minimum Rental Amount\nMonthly Rental:" + $("#hdnPropUnitMonthlyRent").val() + "\nPer Day Rental(Monthly Rental /30):" + PUMonthlyRentPerday + "\nTotal Agreement Days:" + diffDays + "\nMinimum Rental(Per Day Rental*Total Agreement Days):" + MinRent + "\nAgreement Rental Amount:" + Total_Rental_amount + "\nAmount Difference(Minimum Rental-Agreement Rental Amount):" + RentDiff);
        //            alert("Rental Amount Less than Minimum Rental Amount\nExpected Rental Amount:" + Math.ceil(MinRent) + "\nAgreement Rental Amount:" + Total_Rental_amount);
        //        }
        //    }
        //}



        $("#TcaRenewal #Perday_Rental").val(amountperday);
    }
   
</script>

<script>
    $("form#TcaRenewal").off("submit").on("submit", function (e) {
        // e.preventDefault();
        try {
            $("#TcaRenewal #Unit_ID_Tawtheeq").val($("#TcaRenewalUnitIDTawtheeq option:selected").text());
            $("#TcaRenewal #Unit_Property_Name").val($("#TcaRenewalUnitPropertyName option:selected").text());            
            $("#TcaRenewal #Tenant_Type").val($("#TenantType option:selected").text());

            //alert($("#TcaRenewal #SecurityFlag option:selected").text());
            //alert($("#TcaRenewal #SecurityChequeno").text());
            //alert($("#TcaRenewal #SecurityChequedate").text());
            
            $("#TcaRenewal #Security_Flag").val($("#TcaRenewal #TcaRenewalSecurityFlag option:selected").text());
            $("#TcaRenewal #Security_chequeno").val($("#TcaRenewal #SecurityChequeno").val());
            $("#TcaRenewal #Security_chequedate").val($("#TcaRenewal #SecurityChequedate").val());



            var SDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
            var EDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
            //alert(SDate.getFullYear() + "" + SDate.getMonth() + "" + SDate.getDay());
            var startDt = parseInt(SDate.getFullYear() + "" + SDate.getMonth() + "" + SDate.getDay());
            var endDt = parseInt(EDate.getFullYear() + "" + EDate.getMonth() + "" + EDate.getDay());

            var AgreementUtilityCount = parseInt($("#AgreementUtilityListCountRenewal").val());
            var nofopayments = parseInt($("#TcaRenewal #nofopayments").val());
            var AgreementPdcListCount = parseInt($("#TcaRenewal #AgreementPdcListCountRenewal").val());

            //alert($("#TcaRenewal #nofopayments").val());
            //alert($("#TcaRenewal #AgreementPdcListCount").val());
            if (EDate <= SDate) {
                e.preventDefault();
                $("#TcaRenewal #Agreement_End_Date").focus();
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                $(".result-title").text("Failure");
                $(".result-modal-body span").text("Agreement Start Date less than Agreement End Date");
                $('#masterResultModal').modal('show');
                //alert("Agreement Start Date less than Agreement End Date");

            }
            else if (nofopayments != AgreementPdcListCount) {
                e.preventDefault();
                $("#btnAddAgreementRenewalPdc").focus();
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                $(".result-title").text("Failure");
                $(".result-modal-body span").text("No of payments and Payment details mismatch");
                $('#masterResultModal').modal('show');
                //alert("No of payments and Payment details mismatch");
            }
            else if (AgreementUtilityCount < 2) {
                e.preventDefault();
                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                $(".result-title").text("Failure");
                $(".result-modal-body span").text("Minimum 2 utilities required");
                $('#masterResultModal').modal('show');
                //alert("Minimum 2 utilities required");
            }
            else
            {
                e.preventDefault();
                var formData = new FormData($(this)[0]);
                $("#btnRenewalSubmit").prop('disabled', true);
                try {
                    $.ajax(
                        {
                            url: "  ../Tca/AddOrUpdate",
                            method: "POST",
                            data: formData,
                            contentType: false,
                            processData: false,
                            cache: false,
                            async: false,
                            success: function (response) {
                                //GetPropertyMaster();
                                if (response.Errors == null || response.Errors == "") {
                                    $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                                    $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                                    $(".result-title").text("Success");
                                    $(".result-modal-body span").text(response.Message);
                                    IsAddAllow();
                                    getAgreementList();
                                }
                                else {
                                    $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                                    $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                                    $(".result-title").text("Failure");
                                    $(".result-modal-body span").text(response.Errors);
                                }
                            },
                            error: function (jqXhr, textStatus, errorThrown) {
                                $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                                $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                                $(".result-title").text("Failure");
                                $(".result-modal-body span").text(masterResultError);
                            },
                            complete: function () {
                                $('#renewalModal').modal('hide');
                                $("#img-add-or-update-loader").addClass("hide");
                                $('#masterResultModal').modal('show');
                            }
                        });
                }
                catch (ex) {
                    alert(ex);
                }
            }
}
        catch (ex) {
            alert(ex);
        }

    });

    function getAgreementList() {
        $.ajax(
           {
               url: "../Tca/List",
               type: "Get",
               data: { Search: "", page: 1 },
               success: function (html) {
                   $("#agreementList").html(html);
               },
               error: function (jqXhr, textStatus, errorThrown) {
                   //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                   $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                   $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                   $(".result-title").text("Failure");
                   $(".result-modal-body span").text("Could not able to process your requests");
                   $('#masterResultModal').modal('show');
               },
               complete: function () {
                   //   $("#VerifyIdDetailsLoader").addClass("hide");
               }
           });
    }

    $('#renewalModal').modal({
        backdrop: 'static',
        keyboard: false
    })
</script>