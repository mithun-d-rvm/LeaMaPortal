<!--
  File Name      : _AgreementForm.cshtml
  Description    : Agreement Details partial view
  Created Date   : 25-Mar-2017
  Notes          : <Notes>
-->

@model LeaMaPortal.Models.AgreementFormViewModel
@using (Html.BeginForm("AddOrUpdate", "Tca", FormMethod.Post, new { @id = "TcaRenewal", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.Ag_Tenant_id)
    @Html.HiddenFor(x => x.Ag_Tenant_Name)
    @Html.HiddenFor(x => x.property_id)
    @Html.HiddenFor(x => x.Property_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Properties_Name)
    @Html.HiddenFor(x => x.Unit_ID_Tawtheeq)
    @Html.HiddenFor(x => x.Unit_Property_Name)
    @*@Html.HiddenFor(x => x.Caretaker_id)
    @Html.HiddenFor(x => x.Caretaker_Name)*@
    @Html.HiddenFor(x => x.Agreement_No)
    @*@Html.HiddenFor(x => x.Tenant_Type)*@
    <div class="font-smaller">
        <div id="editAgreementForm">
            @Html.HiddenFor(m => m.New_Renewal_flag)
            <button type="button" class="close font-40" data-dismiss="modal"> &times;</button>
            <div class="text-uppercase popup-heading">
                Contract Tenancy Agreement - Edit
            </div>
            <div class="p-b-25"> &nbsp; </div>
            <div class="row">
                <div class="col-md-6 ht-50">
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-3 m-t-3">
                            <span> Single Unit </span>
                        </div>
                        <div class="col-md-1">
                            @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Single", new { @class = "input-checkbox", @required = "required", @id = "single", @readonly = "readonly" })
                        </div>
                        <div class="col-md-4 m-t-3">
                            <span> Multiple Unit </span>
                        </div>
                        <div class="col-md-1 m-l-m-40">
                            @Html.RadioButtonFor(model => model.Single_Multiple_Flag, "Multiple", new { @class = "input-checkbox", @required = "required", @id = "multiple", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    @*<div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            Existing Contract Agreement:
                        </div>
                        <div class="col-md-6">
                            <select class="master-form-input form-control">
                                <option> Agreement 1 </option>
                                <option> Agreement 2 </option>
                                <option> Agreement 3 </option>
                            </select>
                        </div>
                    </div>*@
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Agreement_No, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">

                            @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input form-control",@readonly = "readonly"} })*@
                            <input type="text" value="@Model.Agreement_No" class="master-form-input form-control" disabled />
                            @*@Html.EditorFor(model => model.Agreement_No, new { htmlAttributes = new { @class = "master-form-input" } })*@
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Agreement_Date, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*@Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input" } })*@
                            @Html.EditorFor(model => model.Agreement_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                            @Html.ValidationMessageFor(model => model.Agreement_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Tenant_Type, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownList("Tenant_Type", null, "-- Select --", new { @class = "master-form-input form-control", @required = "required" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Ag_Tenant_id, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("Ag_Tenantid", null, "-- Select --", new { @class = "master-form-input form-control", @Name = "Ag_Tenant_id", @required = "required" })
                            @*@Html.EditorFor(model => model.Ag_Tenant_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })*@
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Ag_Tenant_Name, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("Ag_TenantName", null, "-- Select --", new { @class = "master-form-input form-control", @Name = "Ag_Tenant_Name", @required = "required" })
                        </div>
                    </div>
                    
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Caretaker_id, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.EditorFor(model => model.Caretaker_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Caretaker_Name, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.EditorFor(model => model.Caretaker_Name, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.property_id, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.EditorFor(model => model.property_id, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                            @*@Html.DropDownList("TcaPropertyId", null, "-- Select --", new { @class = "master-form-input" })*@
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Property_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("TcaPropertyIDTawtheeq", null, "-- Select --", new { @class = "master-form-input form-control" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Properties_Name, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("TcaPropertyName", null, "-- Select --", new { @class = "master-form-input form-control" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7" id="UnitPropertyId">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Unit_ID_Tawtheeq, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("UnitIDTawtheeq", null, "-- Select --", new { @class = "master-form-input form-control" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7" id="Unitpropertyname">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Unit_Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<input type="text" class="master-form-input form-control" />*@
                            @Html.DropDownList("UnitPropertyName", null, "-- Select --", new { @class = "master-form-input form-control" })
                        </div>
                    </div>
                </div>



                <div class="col-md-6">
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vacantstartdate, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Vacantstartdate, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Agreement_Start_Date, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Agreement_Start_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Agreement_End_Date, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Agreement_End_Date, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Total_Rental_amount, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Total_Rental_amount, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'editAgreementForm #Total_Rental_amount');" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Perday_Rental, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Perday_Rental, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'editAgreementForm #Perday_Rental');", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.nofopayments, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.nofopayments, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);",@min="0" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Advance_Security_Amount, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Advance_Security_Amount, new { htmlAttributes = new { @class = "master-form-input form-control" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Security_Flag, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @*<select class="master-form-input form-control">
                                <option> Payment 1 </option>
                                <option> Payment 2 </option>
                                <option> Payment 3 </option>
                            </select>*@
                            @Html.DropDownList("SecurityFlag", null, new { @class = "master-form-input form-control" })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Security_chequeno, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Security_chequeno, new { htmlAttributes = new { @class = "master-form-input form-control", @Name = "SecurityChequeno", disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Security_chequedate, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Security_chequedate, new { htmlAttributes = new { @class = "master-form-input form-control", @Name = "SecurityChequedate", disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-12 p-b-7">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Notice_Period, htmlAttributes: new { @class = "label-default-remove" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Notice_Period, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_numbers(event);",@min = "0" } })
                        </div>
                    </div>

                </div>
            </div>
            <div class="p-t-5-p">
                &nbsp;
            </div>
        </div>
        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementUnitR">
            @*@Html.Partial("_AgreementUnit")*@
        </div>
        <!-- END AGREEMENT UNIT -->
        <!-- BEGIN AGREEMENT PDC -->
        <div class="p-lr-20" id="AgreementPdcR">
            @*@Html.Partial("_AgreementPdc")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT Facility -->
        <div class="p-lr-20" id="AgreementFacilityR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT Facility -->
        <!-- END AGREEMENT PDC -->
        <div class="row ht-5">
            &nbsp;
        </div>
        
      
        <!-- BEGIN AGREEMENT UTILITY -->
        <div class="p-lr-20" id="AgreementUtilityR">
            @*@Html.Partial("_AgreementUtility")*@
        </div>
        <!-- END AGREEMENT UTILITY -->
        <div class="row ht-5">
            &nbsp;
        </div>
       
        <div class="row ht-5">
            &nbsp;
        </div>
        <!-- BEGIN AGREEMENT UNIT -->
        <div class="p-lr-20" id="AgreementCheckListR">
            @*@Html.Partial("_AgreementCheckList")*@
        </div>
        @*END AGREEMENT UNIT*@
        <!-- BEGIN AGREEMENT DOCUMENT -->
        <div class="p-lr-20" id="AgreementDocumentR">
            @*@Html.Partial("_AgreementDocument")*@
        </div>
        <!-- END AGREEMENT DOCUMENT -->
        <div class="p-b-10">
            &nbsp;
        </div>
        <div class="col-md-12 form-input-padding">
            <div class="col-md-6">
                &nbsp;
            </div>
            <div class="col-md-4">
                <input type="submit" class="btn master-form-btn" value="Update" />
            </div>
        </div>
    </div>
}
<script>
    sigleOrMultiple();
    function sigleOrMultiple()
    {
        var single_multiple = $('input[name=radioName]:checked', '#editAgreementForm').val();
        if (single_multiple == 'Multiple') {
            //$('#UnitIDTawtheeq').attr('disabled', true);
            //$('#UnitPropertyName').attr('disabled', true);
            $("#editAgreementForm #UnitPropertyId").hide();
            $("#editAgreementForm #Unitpropertyname").hide();
            $("#AgreementUnitR").show();

        }
        else {
            //$('#editAgreementForm #UnitIDTawtheeq').removeAttr('disabled');
            //$('#editAgreementForm #UnitPropertyName').removeAttr('disabled');
            $("#editAgreementForm #UnitPropertyId").show();
            $("#editAgreementForm #Unitpropertyname").show();
            $("#AgreementUnitR").hide();
        }
    }
    $('#editAgreementForm input[type=radio][name=Single_Multiple_Flag]').change(function () {
        if (this.value == 'Multiple') {
            //$('#UnitIDTawtheeq').attr('disabled', true);
            //$('#UnitPropertyName').attr('disabled', true);
            $("#editAgreementForm #UnitPropertyId").hide();
            $("#editAgreementForm #Unitpropertyname").hide();
            $("#AgreementUnitR").show();

        }
        else {
            //$('#editAgreementForm #UnitIDTawtheeq').removeAttr('disabled');
            //$('#editAgreementForm #UnitPropertyName').removeAttr('disabled');
            $("#editAgreementForm #UnitPropertyId").show();
            $("#editAgreementForm #Unitpropertyname").show();
            $("#AgreementUnitR").hide();
        }
        //$("#editAgreementForm #property_id").val(null);
        $.ajax(
               {
                   url: "../Tca/GetPropertiesDetails",
                   // dataType: "jsonp",
                   method: "GET",
                   data: { Type: this.value }, //FormData(form.get(0)),
                   contentType: "application/json",

                   success: function (response) {
                        
                       //var propertyidOptions = '<option value="" selected>--Select--</option>';
                       //$("#editAgreementForm #TcaPropertyId").empty();

                       var propertyidTawtheeqOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #TcaPropertyIDTawtheeq").empty();

                       var propertyNameOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #TcaPropertyName").empty();

                       var unitidOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #UnitIDTawtheeq").empty();

                       var unitnameOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #UnitPropertyName").empty();

                       $.each(response, function (index, data) {
                           //propertyidOptions += '<option value="' + data.property_id + '">' + data.property_id + '</option>';
                           propertyidTawtheeqOptions += '<option value="' + data.property_id + '">' + data.Property_ID_Tawtheeq + '</option>';
                           propertyNameOptions += '<option value="' + data.property_id + '">' + data.Property_Name + '</option>';
                           if (this.value != 'Multiple') {
                               unitidOptions += '<option value="' + data.property_id + '">' + data.Unit_ID_Tawtheeq + '</option>';
                               unitnameOptions += '<option value="' + data.property_id + '">' + data.Unit_Property_Name + '</option>';
                           }
                       });
                       $('#editAgreementForm #TcaPropertyIDTawtheeq').append(propertyidTawtheeqOptions);
                       $('#editAgreementForm #TcaPropertyName').append(propertyNameOptions);
                       $('#editAgreementForm #UnitIDTawtheeq').append(unitidOptions);
                       $('#editAgreementForm #UnitPropertyName').append(unitnameOptions);
                   },
                   error: function (jqXhr, textStatus, errorThrown) {
                       alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                   },
                   complete: function () {
                       // $("#editAgreementForm #").addClass("hide");
                   }

               });
    });

    $("#editAgreementForm #Tenant_Type").on('change', function (e) {
         
        var Tenant_Type = $("#editAgreementForm #Tenant_Type").val();
        $("#editAgreementForm #Ag_Tenant_id").val(null);
        $("#editAgreementForm #Ag_Tenant_Name").val(null);
        if (Tenant_Type != "" && Tenant_Type != null) {
            $.ajax(
                {
                    url: "../Tca/GetTenentDetails",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { Type: $("#editAgreementForm #Tenant_Type").val() }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {
                         
                        if (response != null) {
                            $("#editAgreementForm #Ag_Tenantid").empty();
                            $("#editAgreementForm #Ag_TenantName").empty();
                            var tenantIdoptions = '<option value="" selected>--Select--</option>';
                            var tenantNameoptions = '<option value="" selected>--Select--</option>';
                            $.each(response, function (index, data) {
                                tenantIdoptions += '<option value="' + data.Tenant_Id + '">' + data.Tenant_Id + '</option>';
                                tenantNameoptions += '<option value="' + data.Tenant_Id + '">' + data.Tenant_Name + '</option>';
                            });
                            $('#editAgreementForm #Ag_Tenantid').append(tenantIdoptions);
                            $('#editAgreementForm #Ag_TenantName').append(tenantNameoptions);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#editAgreementForm #").addClass("hide");
                    }

                });
        }
    });

    $("#editAgreementForm #SecurityFlag").change(function () {
         
        var SecurityFlag = $("#editAgreementForm #SecurityFlag").val();
        if (SecurityFlag != undefined && (SecurityFlag == "Cheque" || SecurityFlag == "Online" || SecurityFlag == "Cheque without date")) {
            $('#editAgreementForm #Security_chequeno').removeAttr('disabled');
            $('#editAgreementForm #Security_chequedate').removeAttr('disabled');
            //$("SecurityChequeno").prop("disabled", false);
            //$("SecurityChequedate").prop("disabled", false);
        }
        else {
            $('#editAgreementForm #Security_chequeno').attr('disabled', true);
            $('#editAgreementForm #Security_chequedate').attr('disabled', true);
        }
        return;
    });

    $("#editAgreementForm #Ag_Tenantid").change(function () {
        var tenantid = $("#editAgreementForm #Ag_Tenantid").val();
        $("#editAgreementForm #Ag_TenantName").val($("#editAgreementForm #Ag_Tenantid option:selected").val());

        $("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenantid option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Ag_Tenantid option:selected").text());
        $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_TenantName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Ag_TenantName option:selected").text());
       // $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_Tenant_id option:selected").text());
        return;
    });
    $("#editAgreementForm #Ag_TenantName").change(function () {
        var tenantid = $("#editAgreementForm #Ag_TenantName").val();
        $("#editAgreementForm #Ag_Tenantid").val($("#editAgreementForm #Ag_TenantName option:selected").val());
        $("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenantid option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Ag_Tenantid option:selected").text());
        $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_TenantName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Ag_TenantName option:selected").text());
        //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
        return;
    });

    $("#editAgreementForm #Caretakerid").change(function () {
        var Caretakerid = $("#editAgreementForm #Caretakerid").val();
        
        $("#editAgreementForm #CaretakerName").val($("#editAgreementForm #Caretakerid option:selected").val());

        $("#editAgreementForm #Caretaker_id").val($("#editAgreementForm #Caretakerid option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Caretakerid option:selected").text());
        $("#editAgreementForm #Caretaker_Name").val($("#editAgreementForm #CaretakerName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #CaretakerName option:selected").text());

        // $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_Tenant_id option:selected").text());
        return;
    });
    $("#editAgreementForm #CaretakerName").change(function () {
        var Caretakerid = $("#editAgreementForm #CaretakerName").val();
        $("#editAgreementForm #Caretakerid").val($("#editAgreementForm #CaretakerName option:selected").val());

        $("#editAgreementForm #Caretaker_id").val($("#editAgreementForm #Caretakerid option:selected").text() == "--Select--" ? null : $("#editAgreementForm #Caretakerid option:selected").text());
        $("#editAgreementForm #Caretaker_Name").val($("#editAgreementForm #CaretakerName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #CaretakerName option:selected").text());
        //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
        return;
    });

    //$("#editAgreementForm #TcaPropertyIDTawtheeq").change(function () {
    //    var propertyid = $("#editAgreementForm #TcaPropertyIDTawtheeq").val();
    //    $("#editAgreementForm #TcaPropertyName").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #property_id").val(propertyid);
    //    setpropertyFieldsEdit();
    //    // $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_Tenant_id option:selected").text());
    //    return;
    //});
    //$("#editAgreementForm #TcaPropertyName").change(function () {
    //    var propertyid = $("#editAgreementForm #TcaPropertyName").val();
    //    $("#editAgreementForm #TcaPropertyIDTawtheeq").val($("#editAgreementForm #TcaPropertyName option:selected").val());
    //    $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #TcaPropertyName option:selected").val());
    //    $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #TcaPropertyName option:selected").val());
    //    $("#editAgreementForm #property_id").val(propertyid);
    //    setpropertyFieldsEdit();
    //    //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    //$("#editAgreementForm #UnitIDTawtheeq").change(function () {
    //    var propertyid = $("#editAgreementForm #UnitIDTawtheeq").val();
    //    $("#editAgreementForm #TcaPropertyIDTawtheeq").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #TcaPropertyName").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
    //    $("#editAgreementForm #property_id").val(propertyid);
    //    setpropertyFieldsEdit();
    //    //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    //$("#editAgreementForm #UnitPropertyName").change(function () {
    //    var propertyid = $("#editAgreementForm #UnitPropertyName").val();
    //    $("#editAgreementForm #TcaPropertyIDTawtheeq").val($("#editAgreementForm #UnitPropertyName option:selected").val());
    //    $("#editAgreementForm #TcaPropertyName").val($("#editAgreementForm #UnitPropertyName option:selected").val());
    //    $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #UnitPropertyName option:selected").val());
    //    $("#editAgreementForm #property_id").val(propertyid);
    //    setpropertyFieldsEdit();
    //    //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
    //    return;
    //});

    
    //function setpropertyFieldsEdit() {
    //    $("#editAgreementForm #Property_ID_Tawtheeq").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").text() == "--Select--" ? null : $("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").text());
    //    $("#editAgreementForm #Properties_Name").val($("#editAgreementForm #TcaPropertyName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #TcaPropertyName option:selected").text());
    //    $("#editAgreementForm #Unit_ID_Tawtheeq").val($("#editAgreementForm #UnitIDTawtheeq option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitIDTawtheeq option:selected").text());
    //    $("#editAgreementForm #Unit_Property_Name").val($("#editAgreementForm #UnitPropertyName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitPropertyName option:selected").text());
    //}





    $("#editAgreementForm #TcaPropertyIDTawtheeq").change(function () {
        var propertyid = $("#editAgreementForm #TcaPropertyIDTawtheeq").val();
        $("#editAgreementForm #TcaPropertyName").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
        $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
        $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").val());
        $("#editAgreementForm #property_id").val(propertyid);
        setpropertyFieldsEdit();
        // $("#editAgreementForm #Ag_Tenant_Name").val($("#editAgreementForm #Ag_Tenant_id option:selected").text());
        return;
    });
    $("#editAgreementForm #TcaPropertyName").change(function () {
        var propertyid = $("#editAgreementForm #TcaPropertyName").val();
        $("#editAgreementForm #TcaPropertyIDTawtheeq").val($("#editAgreementForm #TcaPropertyName option:selected").val());
        $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #TcaPropertyName option:selected").val());
        $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #TcaPropertyName option:selected").val());
        $("#editAgreementForm #property_id").val(propertyid);
        setpropertyFieldsEdit();
        //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
        return;
    });

    $("#editAgreementForm #UnitIDTawtheeq").change(function () {
        //var propertyid = $("#editAgreementForm #UnitIDTawtheeq").val();
        //$("#editAgreementForm #TcaPropertyIDTawtheeq").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
        //$("#editAgreementForm #TcaPropertyName").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
        //$("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #UnitIDTawtheeq option:selected").val());
        //$("#editAgreementForm #property_id").val(propertyid);
        setunitFields();
        //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
        $("#editAgreementForm #UnitPropertyName").val($("#editAgreementForm #Property_ID_Tawtheeq option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitIDTawtheeq").val());
        setunitFields();
        return;
    });

    $("#editAgreementForm #UnitPropertyName").change(function () {

        $("#editAgreementForm #UnitIDTawtheeq").val($("#editAgreementForm #UnitPropertyName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitPropertyName").val());
        setunitFields();
        //$("#editAgreementForm #Ag_Tenant_id").val($("#editAgreementForm #Ag_Tenant_Name option:selected").text());
        return;
    });

    //$(document).ready(function () {
    //     
    //    if ($("#editAgreementForm #single")[0].checked) {
    //        $("#editAgreementForm #single").prop('checked', true).change();
    //        //$("select option").prop("selected", false);
    //    }
    //    else {
    //        $("#editAgreementForm #multiple").prop('checked', true).change();
    //        //$("select option").prop("selected", false);
    //    }
    //    //$("#editAgreementForm #property").prop('checked', true).change();
    //});
    function setpropertyFieldsEdit() {
        $("#editAgreementForm #Property_ID_Tawtheeq").val($("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").text() == "--Select--" ? null : $("#editAgreementForm #TcaPropertyIDTawtheeq option:selected").text());
        $("#editAgreementForm #Properties_Name").val($("#editAgreementForm #TcaPropertyName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #TcaPropertyName option:selected").text());
        var propertyid = parseInt($("#editAgreementForm #property_id").val());
        // alert(propertyid);
        if ($.isNumeric(propertyid)) {
            GetPropertyOnChange();
            getUnitEdit(propertyid);
        }
    }
    function GetPropertyOnChange() {
        try
        {
            if ($("#editAgreementForm #TcaPropertyName").val() == "") {
                return;
            }
            $.ajax(
            {
                url: "../Tca/GetPropertyOnChange",
                // dataType: "jsonp",
                method: "GET",
                data: { propertyId: $("#editAgreementForm #TcaPropertyName").val() }, //FormData(form.get(0)),
                contentType: "application/json",
                success: function (response) {
                    if (response != null) {
                        $.each(response, function (index, data) {
                            $("#editAgreementForm #Caretaker_id").val(data.Caretaker_ID);
                            $("#editAgreementForm #Caretaker_Name").val(data.Caretaker_Name);
                            $("#editAgreementForm #Vacantstartdate").val(data.Vacantstartdate);
                            //break;
                        });
                    }

                }
            });
        }
        catch(e){}

    }
    function getUnitEdit(propertyId) {
        $.ajax(
               {
                   url: "../Tca/GetPropertiesUnitDetails",
                   // dataType: "jsonp",
                   method: "GET",
                   data: { propertyId: propertyId }, //FormData(form.get(0)),
                   contentType: "application/json",

                   success: function (response) {
                        
                       //var propertyidOptions = '<option value="" selected>--Select--</option>';
                       //$("#editAgreementForm #TcaPropertyId").empty();

                       //var propertyidTawtheeqOptions = '<option value="" selected>--Select--</option>';
                       //$("#editAgreementForm #TcaPropertyIDTawtheeq").empty();

                       var propertyNameOptions = '<option value="" selected>--Select--</option>';
                       //$("#editAgreementForm #TcaPropertyName").empty();

                       var unitidOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #UnitIDTawtheeq").empty();

                       var unitnameOptions = '<option value="" selected>--Select--</option>';
                       $("#editAgreementForm #UnitPropertyName").empty();

                       $.each(response, function (index, data) {
                           //propertyidOptions += '<option value="' + data.property_id + '">' + data.property_id + '</option>';
                           //propertyidTawtheeqOptions += '<option value="' + data.Property_ID_Tawtheeq + '">' + data.Property_ID_Tawtheeq + '</option>';
                           // propertyNameOptions += '<option value="' + data.Property_ID_Tawtheeq + '">' + data.Property_Name + '</option>';

                           unitidOptions += '<option value="' + data.Value + '">' + data.Value + '</option>';
                           unitnameOptions += '<option value="' + data.Value + '">' + data.Text + '</option>';

                       });
                       //$('#editAgreementForm #TcaPropertyIDTawtheeq').append(propertyidTawtheeqOptions);
                       //$('#editAgreementForm #TcaPropertyName').append(propertyNameOptions);
                       $('#editAgreementForm #UnitIDTawtheeq').append(unitidOptions);
                       $('#editAgreementForm #UnitPropertyName').append(unitnameOptions);
                   },
                   error: function (jqXhr, textStatus, errorThrown) {
                       alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                   },
                   complete: function () {
                       // $("#editAgreementForm #").addClass("hide");
                   }

               });
    }
    function setunitFields() {
        $("#editAgreementForm #Unit_ID_Tawtheeq").val($("#editAgreementForm #UnitIDTawtheeq option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitIDTawtheeq option:selected").text());
        $("#editAgreementForm #Unit_Property_Name").val($("#editAgreementForm #UnitPropertyName option:selected").text() == "--Select--" ? null : $("#editAgreementForm #UnitIDTawtheeq option:selected").text());
    }
    $("#editAgreementForm #Agreement_Start_Date").change(function () {
        setContractAmountPerDayEdit();
    });
    $("#editAgreementForm #Agreement_End_Date").change(function () {
        setContractAmountPerDayEdit();
    });
    $("#editAgreementForm #Total_Rental_amount").change(function () {
        setContractAmountPerDayEdit();
    });
    setContractAmountPerDayEdit();
    function setContractAmountPerDayEdit() {
        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
        var firstDate = new Date($("#editAgreementForm #Agreement_Start_Date").val());
        var secondDate = new Date($("#editAgreementForm #Agreement_End_Date").val());
        var Total_Rental_amount = parseFloat($("#editAgreementForm #Total_Rental_amount").val());
        var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));
        var amountperday = 0.0;
        if (firstDate < secondDate) {
            if (diffDays > 0) {
                amountperday = (Total_Rental_amount / (diffDays + 1)).toFixed(2);
            }
        }
        else if (firstDate.getDate() == secondDate.getDate()) {
            amountperday = Total_Rental_amount;
        }

        $("#editAgreementForm #Perday_Rental").val(amountperday);
    }
</script>

<script>
    $("form#TcaRenewal").off("submit").on("submit", function (e) {
        // e.preventDefault();
        try {
            var firstDate = new Date($("#TcaRenewal #Agreement_Start_Date").val());
            var secondDate = new Date($("#TcaRenewal #Agreement_End_Date").val());
            var AgreementUtilityCount =parseInt($("#AgreementUtilityListCountRenewal").val());
            var nofopayments = parseInt($("#TcaRenewal #nofopayments").val());
            var AgreementPdcListCount = parseInt($("#TcaRenewal #AgreementPdcListCountRenewal").val());
            if (firstDate.getDate() >= secondDate.getDate()) {
                e.preventDefault();
                $("#TcaRenewal #Agreement_End_Date").focus();
                alert("Agreement Start Date less than Agreement End Date");

            }
            else if (nofopayments != AgreementPdcListCount) {
                e.preventDefault();
                $("#btnAddAgreementRenewalPdc").focus();
                alert("No of payments and Payment details mismatch");
            }
            else if (AgreementUtilityCount < 2) {
                e.preventDefault();
                alert("Minimum 2 utilities required");
            }
        }
        catch (ex) {
            alert(ex);
        }

    });
</script>