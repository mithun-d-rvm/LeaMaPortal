
@model LeaMaPortal.Models.ReceiptViewModel
@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "Receipts" }))
{
    @Html.HiddenFor(model=>model.Id)    
    @Html.HiddenFor(model=>model.Tenant_Name)
    @Html.HiddenFor(model=>model.Property_Name)
    @Html.HiddenFor(model=>model.unit_Name)
    @*@Html.HiddenFor(model=>model.BankAcName)*@
    @Html.HiddenFor(model=>model.DDChequeNo)

    


    <div class="row font-smaller">
        <div class="col-md-6">
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ReceiptNo, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">

                    @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "master-form-input form-control", @readonly="readonly", @required = "required" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ReceiptDate, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ReceiptDate, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    <!--Receipt type-->
                    @Html.LabelFor(model => model.Reccategory, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @*@Html.DropDownListFor(model => model.Reccategory, null, htmlAttributes: new { @class = "master-form-input" })*@
                    @Html.DropDownList("Reccategory", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    <!--Receipt mode-->
                    @Html.LabelFor(model => model.RecpType, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.RecpType, null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @id = "RecpType", @required = "required" })
                </div>
            </div>
            <div class="col-md-12 p-b-7" id="advancePayment">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.AdvAcCode, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("AdvAcCode", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                </div>
            </div>

            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.agreement_no, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("agreement_no", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })                        
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ContracAgreementDate, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ContracAgreementDate, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required",@readonly="readonly" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Tenant_id, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("Tenant_id", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control",@placeholder="--Select--", @required = "required" })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Tenant_Name, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("TenantName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                </div>
            </div>

            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Property_id, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("Property_id", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })                        
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Property_Name, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">@Html.DropDownList("PropertyName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                </div>
            </div>

        </div>

        <div class="col-md-6">
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Unit_ID, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                        @Html.DropDownList("Unit_ID", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.unit_Name, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownList("unitName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                </div>
            </div>


            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "master-form-input form-control", @onkeypress = "allow_only_Float(event,'TotalAmount');", @required = "required", @onchange = "AmountInWords()" } })*@
                    @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "master-form-input form-control",  @required = "required", @onchange = "AmountInWords()" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.AmtInWords, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AmtInWords, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required",@readonly="readonly" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7" id="pdcstatus">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.PDCstatus, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.PDCstatus, null, htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                </div>
            </div>
            <div class="col-md-12 p-b-7" name="cheque" id="drpCheque">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DDChequeNo, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @*<select id="ddChequeNumber" class = "master-form-input form-control">

                </select>*@
                    @*@Html.DropDownListFor(model => model.DDChequeNo, null, htmlAttributes: new { @class = "master-form-input form-control", Id = "ddChequeNumber", @required = "required" })*@

                    @Html.DropDownList("ddChequeNumber", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })
                    @*@Html.DropDownList("DDChequeNo",null,"--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })*@
                </div>
            </div>
            <div class="col-md-12 p-b-7" id="txtCheque" name="cheque">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DDChequeNo, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DDChequeNo, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required", @id = "txtChequeNo" } })
                </div>
            </div>
            <div class="col-md-12 p-b-7" id="txtChequeDate" name="cheque">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DDChequeDate, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DDChequeDate, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required" } })
                </div>
            </div>
            @*<div class="col-md-12 p-b-7" name="cheque" id="drpChequeDate">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DDChequeDate, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    <select id="ddChequeDate" class="master-form-input form-control"></select>
                </div>
            </div>*@
            <div id="bankDetails">
                <div class="col-md-12 p-b-7">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankAcCode, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BankAcCode, new { htmlAttributes = new { @class = "master-form-input" } })
                        @*<select class="col-md-12 leama-field">
                    <option value="BankAcCode">Bank Account Code</option>
                </select>*@
                        @*@Html.DropDownListFor(model => model.BankAcCode, null, htmlAttributes: new { @class = "master-form-input form-control", Id = "BankAcCode", @required = "required" })*@
                        @*@Html.DropDownList("BankAcCode", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })*@
                    </div>
                </div>
                <div class="col-md-12 p-b-7">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankAcName, htmlAttributes: new { @class = "label-default-remove" })
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BankAcName, new { htmlAttributes = new { @class = "master-form-input",@id = "Bank_AcName" } })
                        @*<select class="col-md-12 leama-field">
                    <option value="Bank Account Name">Bank Account Name</option>
                </select>*@
                        @*@Html.DropDownListFor(model => model.BankAcName, null, htmlAttributes: new { @class = "master-form-input form-control", Id = "Bank_AcName", @required = "required" })*@
                        @*@Html.DropDownList("Bank_AcName", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control", @required = "required" })*@
                    </div>
                </div>
            </div>
            
            <div class="col-md-12 p-b-7">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Narration, htmlAttributes: new { @class = "label-default-remove" })
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input form-control", @required = "required" } })
                </div>
            </div>
            
        </div>

    </div>
    <div class="row">
        @*<div class="col-md-12 document-row">
                <div class="col-md-1">
                    ID
                </div>
                <div class="col-md-2">
                    Invoice Type
                </div>
                <div class="col-md-2">
                    Invoice Number
                </div>
                <div class="col-md-2">
                    Invoice Date
                </div>
                <div class="col-md-2">
                    Invoice Description
                </div>
            </div>*@
        <!-- Begin Dynamic row -->
        @*@Html.Partial("ReceiptDetails1");*@
        <!-- End Dynamic row -->
        @*<table class="table">
                <tr>
                    <td>
                        <div class="col-md-2">
                            Invoice Type
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Invoice Number
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Invoice Date
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Invoice Description
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Invoice Amount
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Credit Amount
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Received Amount
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Balance Amount
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-2">
                            Remarks
                            @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "master-form-input" } })
                        </div>
                        <div class="col-md-4">
                            <button class="btn master-form-btn">Add</button>
                        </div>
                    </td>
                </tr>

                @foreach (var item in Model.ReceiptDetailsList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Invtype)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Invno)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreditAmt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceivedAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Balance)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remarks)
                        </td>

                    </tr>
                }

            </table>*@

        <div class="pull-left" id="invoice" >
            @if (Model.ReceiptDetailsList != null)
            {
                <input type="hidden" id="receipt-count" value="@Model.ReceiptDetailsList.Count" />
            }
            else
            {
                <input type="hidden" id="receipt-count" value="0" />
            }
            <br />
            <div class="p-b-25">
                <h3>Receipts Details</h3>
            </div>
            <div class="" id="invoice-details">
                <div id="Gridview" class="row document-row">
                    <div class="col-md-12">
                        <div class="col-md-2 form-group">
                            <label for="itemtype">Invoice Type*</label>
                            <input type="text" class="form-control master-form-input" id="InvoiceType" readonly/>
                        </div>
                        <div class="col-md-2 form-group">
                            <label for="description">Invoice Number*</label>
                            @Html.DropDownList("InvoiceNumber", null, "--Select--", htmlAttributes: new { @class = "master-form-input form-control" })
                        </div>
                        <div class="col-md-2 form-group">
                            <label for="quantity">Invoice Date*</label>
                            <input type="date" class="form-control master-form-input" id="InvoiceDate" />
                        </div>
                        <div class="col-md-2 form-group">
                            <label for="amount">Invoice Description*</label>
                            <input id="InvoiceDescription" type="text" class="form-control master-form-input" />
                        </div>
                        <div class="col-md-2 form-group">
                            <label for="amount">Remarks</label>
                            <input class="form-control master-form-input" id="Remarks" />
                        </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-2 form-group">
                                <label for="itemtype">Invoice Amount*</label>
                                <input type="text" class="form-control master-form-input" id="InvoiceAmount" onkeypress = "allow_only_Float(event, 'InvoiceAmount');" readonly/>
                            </div>
                            <div class="col-md-2 form-group">
                                <label for="description">Credit Amount*</label>
                                <input type="text" class="form-control master-form-input" onkeypress = "allow_only_Float(event, 'CreditAmount');" onchange="calculateBalance()" id="CreditAmount" />
                            </div>
                            <div class="col-md-2 form-group">
                                <label for="quantity">Received Amount*</label>
                                <input type="text" class="form-control master-form-input" onchange="calculateBalance()" id="ReceivedAmount" onkeypress = "allow_only_Float(event, 'ReceivedAmount');" />
                            </div>
                            <div class="col-md-2 form-group">
                                <label for="amount">Balance Amount*</label>
                                <input class="form-control master-form-input" id="BalanceAmount" onkeypress = "allow_only_Float(event, 'BalanceAmount');" />
                            </div>
                            <div class="col-md-2 btn-group">
                                <br />
                                <input type="button" class="document-btn" id="AddInvoice" value="Add" onclick='add(this);' />
                            </div>
                        </div>

                </div>

            </div>

            @*<div class="row">
                    <div class="col-md-12 document-row">
                        <div class="col-md-1">
                            ID
                        </div>
                        <div class="col-md-2">
                            Item Type
                        </div>
                        <div class="col-md-2">
                            Item Description
                        </div>
                        <div class="col-md-2">
                            Quantity
                        </div>
                        <div class="col-md-2">
                            Amount
                        </div>
                    </div>
                </div>*@
            <div class="row ht-5">
                &nbsp;
            </div>

            <!-- Begin Dynamic row -->
            @*@Html.Partial("_ReceiptDetailsList")*@
            <!-- End Dynamic row -->

        </div>

        <table class="row m-t-20" id="ReceiptDetailsListForms">


            @if (Model.ReceiptDetailsList != null)
            {

                for (int j = 0; j < Model.ReceiptDetailsList.Count; j++)
                {
                    // <script>
                    var html = "<div class='col-md-12 document-row' id='GridViewCompanyContact" + @j + "'>";

                    html = html + "<div class='col-md-12'>";
                    html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceType" + @j + "'  type='text' value='" + Model.ReceiptDetailsList[@j].Invtype + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].Invtype' data-name='Invtype'/></div>";
                    html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceNumber" + @j + "'  type='text' value='" + Model.ReceiptDetailsList[@j].Invno + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].Invno' data-name='Invno' /></div>";
                    html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='date' id='InvoiceDate" + @j + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].InvoiceDate' data-name='InvoiceDate' value='" + Model.ReceiptDetailsList[@j].InvoiceDate + "'/></div>";
                    html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='InvoiceDescription" + @j + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].Description' data-name='InvoiceDescription' value='" + Model.ReceiptDetailsList[@j].Description + "'/></div>";
                    html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='Remarks" + @j + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].Remarks' data-name='Remarks' value='" + Model.ReceiptDetailsList[@j].Remarks + "'/></div></div><div class='col-md-12'>";
                    html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceAmount" + @j + "'  type='text' value='" + Model.ReceiptDetailsList[@j].InvoiceAmount + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].InvoiceAmount' data-name='InvoiceAmount'/></div>";
                    html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='CreditAmount" + @j + "'  type='text' value='" + Model.ReceiptDetailsList[@j].CreditAmt + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].CreditAmt' data-name='CreditAmt' /></div>";
                    html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='ReceivedAmount" + @j + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].ReceivedAmount' data-name='ReceivedAmount' value='" + Model.ReceiptDetailsList[@j].ReceivedAmount + "'/></div>";
                    html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='BalanceAmount" + @j + "' class='form-control master-form-input' name='ReceiptDetailsList[" + j + "].Balance' data-name='Balance' value='" + Model.ReceiptDetailsList[@j].Balance + "'/></div>";
                    html = html + "<div class='col-md-2 form-group'></br><input type='button' class='document-btn removebutton' id='Delete" + @j + "'value='Delete' />  </div>";
                    html = html + "</div>";

                    html = html + "</div>";
                    html = html + "<div class='row ht-5'> &nbsp;</div>";

                    <tr>
                        <td>
                            @Html.Raw(html)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
    <div class="row ht-5">
        &nbsp;
    </div>
    <div class="col-md-12 form-input-padding btn-group-justified">
        <div class="col-md-3">

        </div>
        <div class="col-md-3">
            <button class="btn master-form-btn" id="btnSubmit" type="submit">Submit</button>
        </div>
        <div class="col-md-3">
            <button class="btn master-form-btn" id="btnCancel" type="reset" onclick="formReset()">Cancel</button>
        </div>
        <div class="col-md-3">

        </div>

    </div>
}
<script>
    $("#Tenant_id").on('change', function (e) {

        var tenantid = $("#Tenant_id").val();
        $("#TenantName").val($("#Tenant_id option:selected").val());
        setTenantDetails();

    });
    $("#TenantName").on('change', function (e) {

        var tenantid = $("#TenantName").val();
        $("#Tenant_id").val($("#TenantName option:selected").val());

    });

    function setTenantDetails()
    {
        //$("#Tenant_Name").val($("#TenantName option:selected").text() == "--Select--" ? null : $("#TcaPropertyIDTawtheeq option:selected").text());
        //alert($("#Tenant_Name").val($("#TenantName option:selected").text() == "--Select--" ? null : $("#TcaPropertyIDTawtheeq option:selected").text()));
        //alert($("Tenant_Name").val());
        //alert($("Tenant_Name").text());
        //var nm = $("#Tenant_Name").val();
        //alert(nm);
    }

    $("#Property_id").on('change', function (e) {

        var propertyid = $("#Property_id").val();
        $("#PropertyName").val(propertyid);
        var id = $("#Property_id option:selected").text() == "--Select--" ? null : propertyid;
        getunits(id);
    });
    $("#PropertyName").on('change', function (e) {

        var propertyid = $("#PropertyName").val();
        $("#Property_id").val($("#PropertyName option:selected").val());
        var id = $("#PropertyName option:selected").text() == "--Select--" ? null : propertyid;
        getunits(id);
    });


    $("#Unit_ID").on('change', function (e) {

        var unitid = $("#Unit_ID").val();
        $("#unitName").val(unitid);   //$("#Unit_ID option:selected").val()
        var id = $("#Unit_ID option:selected").text() == "--Select--" ? null : unitid;
        getproperty(id);
    });
    $("#unitName").on('change', function (e) {

        var unitid = $("#unitName").val();
        $("#Unit_ID").val($("#unitName option:selected").val());
        var id = $("#unitName option:selected").text() == "--Select--" ? null : unitid;
        getproperty(id);
    });


    function getunits(id) {
        var data = id == null ? {} : { propertyid: id };
        $.ajax(
                {
                    url: "../Invoice/GetPropertyUnits",
                    method: "GET",
                    data: data, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {

                        var options = '<option value="" selected>--Select--</option>';
                        $("#UnitID").empty();

                        $.each(response, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                        });
                        $('#UnitID').append(options);

                        $("#unitName").empty();
                        var options = '<option value="" selected>--Select--</option>';
                        $.each(response, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                        });
                        $('#unitName').append(options);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                    }

                });
    }

    function getproperty(id) {
        if (id == null) {
            $('#Propertyid').val('')
            $("#Propertyid").prop('selected', false).change();
        }
        else {
            $.ajax(
                {
                    url: "../Invoice/GetUnitProperty",
                    method: "GET",
                    data: { unitid: id },
                    contentType: "application/json",

                    success: function (response) {

                        $("#Propertyid").val(response);
                        $("#PropertyName").val(response);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                    }

                });
        }

    }
    function getInvoice(invoiceNo) {

        $.ajax(
                {
                    url: "../Receipts/GetInvoiceDetails",
                    method: "GET",
                    data: { InvoiceNumber: invoiceNo },
                    contentType: "application/json",
                    success: function (response) {

                        if (response != null)
                        {
                            $("#InvoiceType").val(response.invtype);
                            //$("#InvoiceDate").val(response.month+"/"+response.day+"/"+response.year);
                            //alert(response.day);
                            $("#InvoiceDate").val(ToJavaScriptDate(response.date));
                            $("#InvoiceDescription").val(response.Description);
                            //$("#Remarks").val(response.Remark);
                            //$("#ContracAgreementDate").val(ToJavaScriptDate(response.AgreementDate));
                            $("#InvoiceAmount").val(response.InvoiceAmount);
                        }

                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                    }
                });
    }
    $("#InvoiceNumber").change(function ()
    {
        if ($("#InvoiceNumber option:selected").text() == "--Select--")
        {
            $("#InvoiceType").val("");
            $("InvoiceDescription").val("");
            $("Remarks").val("");
            $("#InvoiceAmount").val("");
            $("#InvoiceDate").val("mm/dd/yyyy");
        }
        else
        {
            getInvoice($("#InvoiceNumber option:selected").val())
        }
    });

    function showHideSubForm(Reccategory) {
        if (Reccategory != "against invoice") {
            document.getElementById('invoice').style.display = "none";
            document.getElementById('ReceiptDetailsListForms').style.display = "none";
        }
        else {
            document.getElementById('invoice').style.display = "block";
            document.getElementById('ReceiptDetailsListForms').style.display = "block";
        }
    }

    $("#Reccategory").on('change', function () {
        showHideSubForm($("#Reccategory option:selected").val());
        $("#RecpType").prop("selected", false);
        ShowHidePaymentModeFields($("#RecpType").val());
        if($("#Reccategory").val() == "against invoice")
        {
            $("#DDChequeNo").prop("readonly", false);
            getAgreementNumbers(1);
        }
        else if($("#Reccategory").val() == "security deposit")
        {
            $("#DDChequeNo").prop("readonly", false);
            getAgreementNumbers(2);
        }
        if ($("#Reccategory").val() == "advance")
        {
            //alert("advance");
            //$("#RecpType option[value='Advance adjust']").remove();
        }
        //ddlChange();
    });


    //$("#RecpType").on('change', function () {
    //    ddlChange();
    //});


    function calculateBalance() {
        var InvoiceAmount = document.getElementById("InvoiceAmount").value != null ? Number(document.getElementById("InvoiceAmount").value) : 0;
        var CreditAmount = document.getElementById("CreditAmount").value != null ? Number(document.getElementById("CreditAmount").value) : 0;
        var ReceivedAmount = document.getElementById("ReceivedAmount").value != null ? Number(document.getElementById("ReceivedAmount").value) : 0;

        var Balance = InvoiceAmount - (ReceivedAmount + CreditAmount);
        document.getElementById("BalanceAmount").value = Balance;
    }

    $("#advaccode").hide();

    //function ddlChange() {
    //    var type = $("#Reccategory").val(); // type
    //    var mode = $("#RecpType").val();

    //    if (type == 'against' && mode == 'advance adjustment') {
    //        $("#advaccode").show();
    //        GetReceiptNumber();
    //    }
    //    if (type == 'advance' && mode == 'Pdc') {
    //        GetAgreementNoByPdc();
    //    }
    //    if (type == 'against' && mode != 'advance adjustment') {
    //        GetAgreementNoByInvoice();
    //    }
    //    if (type == 'security') {
    //        GetAgreementNoBySecurity();
    //    }
    //    if (mode == 'Pdc') {
    //        $("#PDCStatus").show();
    //    }

    //}
    $("#agreement_no").on('change', function (e) {
        var agreement_no = $("#agreement_no").val();
        $.ajax(
                {
                    url: "../Receipts/GetAgreementDetails",
                    // dataType: "jsonp",
                    method: "GET",
                    data: { agreement_no: agreement_no, Mode: $("#RecpType").val(), ReceiptCat: $("#Reccategory").val() }, //FormData(form.get(0)),
                    contentType: "application/json",

                    success: function (response) {


                        //alert($("#Reccategory option:selected").text());
                        $("#Tenant_id").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        //var options = agreement_no == '<option vlaue="">--Select--</option>';
                        $.each(response.Tenants, function (index, data) {
                            options += '<option value="' + data.Tenantid + '">' + data.Tenantid + '</option>';
                        });
                        $('#Tenant_id').append(options);

                        $("#TenantName").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        //var options = agreement_no == '<option vlaue="">--Select--</option>';
                        $.each(response.Tenants, function (index, data) {
                            options += '<option value="' + data.Tenantid + '">' + data.TenantName + '</option>';
                        });
                        $('#TenantName').append(options);

                        $("#Property_id").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        //var options = agreement_no == '<option vlaue="">--Select--</option>';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.Propertyid + '</option>';
                        });
                        $('#Property_id').append(options);

                        $("#PropertyName").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        //var options = agreement_no =='<option vlaue="">--Select--</option>';
                        $.each(response.Properties, function (index, data) {
                            options += '<option value="' + data.Propertyid + '">' + data.PropertyName + '</option>';
                        });
                        $('#PropertyName').append(options);

                        $("#Unit_ID").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                        });
                        $('#Unit_ID').append(options);

                        $("#unitName").empty();
                        var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                        $.each(response.Units, function (index, data) {
                            options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                        });
                        $('#unitName').append(options);

                        //debugger;
                        if ($("#Reccategory").val() == "security deposit")
                        {
                            $("#RecpType option:selected").text(response.Security_Flag).change();
                            $("#ddChequeNumber").empty();
                            //var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                            var options;
                            $.each(response.Cheques, function (index, data) {
                                options += '<option value="' + data.Cheque_No + '">' + data.Cheque_No + '</option>';
                            });
                            $('#ddChequeNumber').append(options);
                            $("#DDChequeDate").val(ToJavaScriptDate(response.Security_chequedate));
                            $("#TotalAmount").val(response.Security_Amount).change();

                            //$("#RecpType option:selected").text() = response.Security_Flag;
                        }
                        else
                        {
                            $("#ddChequeNumber").empty();
                            //var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                            var options = '<option vlaue="">--Select--</option>';
                            $.each(response.Cheques, function (index, data) {
                                options += '<option value="' + data.Cheque_No + '">' + data.Cheque_No + '</option>';
                            });
                            $('#ddChequeNumber').append(options);
                        }


                        //$("#DDChequeDate").empty();
                        //var options = '<option value="">--Select--</option>';
                        //$.each(response.Units, function (index, data) {
                        //    options += '<option value="' + data.Cheque_No + '">' + data.cheque_date + '</option>';
                        //});
                        //$('#DDChequeDate').append(options);
                        if(response.AgreementDate!=null)
                            $("#ContracAgreementDate").val(ToJavaScriptDate(response.AgreementDate));
                        if ($("#RecpType").val() == "cash" && $("#Reccategory").val()=="advance")
                            getChequeDetails($("#RecpType").val(), $("#agreement_no").val(), $("#DDChequeNo").val());
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                    },
                    complete: function () {
                        // $("#").addClass("hide");
                    }

                });
        getInvoiceNumber();


        //$.ajax(
        //           {
        //               url: "../Receipts/GetRecBasInvoiceNo",
        //               // dataType: "jsonp",
        //               method: "GET",
        //               data: { agreement_no: agreement_no}, //FormData(form.get(0)),
        //               contentType: "application/json",

        //               success: function (response) {



        //                   $("#InvoiceNumber").empty();
        //                   var options = '<option vlaue="">--Select--</option>';
        //                   $.each(response.InvoiceNo, function (index, data) {
        //                       options += '<option value="' + data.InvNum + '">' + data.InvNum + '</option>';
        //                   });
        //                   $('#InvoiceNumber').append(options);


        //               },
        //               error: function (jqXhr, textStatus, errorThrown) {
        //                   alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
        //               },
        //               complete: function () {
        //                   // $("#").addClass("hide");
        //               }

        //           }
        //      );
    });

    $("#TotalAmount").on('change', function () {

        var totalAmount = $("#TotalAmount").val(); // type
        AmountInWords(totalAmount);
    });
    function AmountInWords(totalAmount) {
        $.ajax(
        {
            url: "../Receipts/AmountInWords",
            type: "Get",
            data: { amount: totalAmount },
            success: function (response) {
                $("#AmtInWords").val(response);
            },
            error: function (jqXhr, textStatus, errorThrown) {
                //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                $("#img-loader").addClass("hide");
            }
        });
    }
    function getAgreementNumbers(flg) {
        $.ajax(
        {
            url: "../Receipts/GetAggrementNumbers",
            type: "Get",
            data: {Flg: flg},
            success: function (response) {
                $("#agreement_no").empty();
                var Agreement_No = '<option value="">--Select--</option>';
                $.each(response, function (index, data) {
                    Agreement_No += '<option value="' + data + '">' + data + '</option>';
                });
                $('#agreement_no').append(Agreement_No);
                $('#agreement_no').change();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                $("#img-loader").addClass("hide");
            }
        });
    }
    function getInvoiceNumber() {
        $.ajax(
        {
            url: "../Receipts/GetRecBasInvoiceNo",
            type: "Get",
            data: { agreement_no: $('#agreement_no').val()},
            success: function (response) {
                $("#InvoiceNumber").empty();
                var InvoiceNo = '<option value="">--Select--</option>';
                $.each(response, function (index, data) {
                    InvoiceNo += '<option value="' + data + '">' + data + '</option>';
                });
                $('#InvoiceNumber').append(InvoiceNo);
                //$('#InvoiceNumber').change();
            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                $("#img-loader").addClass("hide");
            }
        });
    }
    function getChequeDetails(Mode, agreement_no, cheque_no) {

        if (cheque_no == "--Select--") {
            $("#TotalAmount").val("");
            $("#AmtInWords").val("");
            $("#DDChequeDate").val("");
            $("#Bank_AcName").val("");
            return false;
        }
        $.ajax(
        {
            url: "../Receipts/GetAggrementDetailsByMode",
            type: "Get",
            data: { Mode: Mode, agreement_no: agreement_no, cheque_no: cheque_no },
            success: function (response) {

                $("#TotalAmount").val(response.Cheque_Amount);
                $("#TotalAmount").trigger("change");
                //debugger;
                //alert(response.BankName);
                $("#Bank_AcName").val(response.BankName);
                if (response.cheque_date!=null)
                $("#DDChequeDate").val(ToJavaScriptDate(response.cheque_date));

            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                $("#img-loader").addClass("hide");
            }
        });
    }
    //function GetReceiptNumber() {
    //    $.ajax(
    //    {
    //        url: "../Receipts/GetReceiptNumber",
    //        type: "Get",
    //        data: {},
    //        //contentType: "application/json",
    //        //processData: false,
    //        success: function (response) {
    //
    //            $("#AdvAcCode").empty();
    //            var AdvAcCode = '';
    //            $.each(response.ReceiptNo, function (index, data) {
    //                AdvAcCode += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#AdvAcCode').append(AdvAcCode);

    //            $("#agreement_no").empty();
    //            var Agreement_No = '';
    //            $.each(response.Agreement_No, function (index, data) {
    //                Agreement_No += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#agreement_no').append(Agreement_No);

    //            $("#Property_id").empty();
    //            var Property_Id = '';
    //            $.each(response.Property_Id, function (index, data) {
    //                Property_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_id').append(Property_Id);

    //            $("#Property_Name").empty();
    //            var Property_Name = '';
    //            $.each(response.Property_Name, function (index, data) {
    //                Property_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_Name').append(Property_Name);

    //            $("#Tenant_id").empty();
    //            var Tenant_Id = '';
    //            $.each(response.Tenant_Id, function (index, data) {
    //                Tenant_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_id').append(Tenant_Id);

    //            $("#Tenant_Name").empty();
    //            var Tenant_Name = '';
    //            $.each(response.Tenant_Name, function (index, data) {
    //                Tenant_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_Name').append(Tenant_Name);

    //            $("#Unit_ID").empty();
    //            var Unit_Id = '';
    //            $.each(response.Unit_Id, function (index, data) {
    //                Unit_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Unit_ID').append(Unit_Id);

    //            $("#unit_Name").empty();
    //            var Unit_Name = '';
    //            $.each(response.Unit_Name, function (index, data) {
    //                Unit_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#unit_Name').append(Unit_Name);

    //            $('#TotalAmount').val(response.TotalAmount[0].Text);
    //            $("#TotalAmount").trigger("change");
    //        },
    //        error: function (jqXhr, textStatus, errorThrown) {
    //            alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
    //        },
    //        complete: function () {
    //            $("#img-loader").addClass("hide");
    //        }
    //    });
    //}

    //function GetAgreementNoByPdc() {
    //    $.ajax(
    //    {
    //        url: "../Receipts/GetAgreementNoByPdc",
    //        type: "Get",
    //        data: {},
    //        //contentType: "application/json",
    //        //processData: false,
    //        success: function (response) {
    //
    //            //$("#AdvAcCode").empty();
    //            //var AdvAcCode = '';
    //            //$.each(response.ReceiptNo, function (index, data) {
    //            //    AdvAcCode += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            //});
    //            //$('#AdvAcCode').append(AdvAcCode);

    //            $("#agreement_no").empty();
    //            var Agreement_No = '';
    //            $.each(response.Agreement_No, function (index, data) {
    //                Agreement_No += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#agreement_no').append(Agreement_No);

    //            $("#Property_id").empty();
    //            var Property_Id = '';
    //            $.each(response.Property_Id, function (index, data) {
    //                Property_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_id').append(Property_Id);

    //            $("#Property_Name").empty();
    //            var Property_Name = '';
    //            $.each(response.Property_Name, function (index, data) {
    //                Property_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_Name').append(Property_Name);

    //            $("#Tenant_id").empty();
    //            var Tenant_Id = '';
    //            $.each(response.Tenant_Id, function (index, data) {
    //                Tenant_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_id').append(Tenant_Id);

    //            $("#Tenant_Name").empty();
    //            var Tenant_Name = '';
    //            $.each(response.Tenant_Name, function (index, data) {
    //                Tenant_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_Name').append(Tenant_Name);

    //            $("#Unit_ID").empty();
    //            var Unit_Id = '';
    //            $.each(response.Unit_Id, function (index, data) {
    //                Unit_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Unit_ID').append(Unit_Id);

    //            $("#unit_Name").empty();
    //            var Unit_Name = '';
    //            $.each(response.Unit_Name, function (index, data) {
    //                Unit_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#unit_Name').append(Unit_Name);

    //            //$('#TotalAmount').val(response.TotalAmount[0].Text);

    //            $('#TotalAmount').val(response.pdc_Amount[0].Text);
    //            $("#TotalAmount").trigger("change");

    //            $('#DDChequeNo').val(response.DDChequeNo[0].Text);

    //        },
    //        error: function (jqXhr, textStatus, errorThrown) {
    //            alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
    //        },
    //        complete: function () {
    //            $("#img-loader").addClass("hide");
    //        }
    //    });
    //}

    //function GetAgreementNoByInvoice() {
    //    $.ajax(
    //    {
    //        url: "../Receipts/GetAgreementNoByInvoice",
    //        type: "Get",
    //        data: {},
    //        //contentType: "application/json",
    //        //processData: false,
    //        success: function (response) {
    //
    //            //$("#AdvAcCode").empty();
    //            //var AdvAcCode = '';
    //            //$.each(response.ReceiptNo, function (index, data) {
    //            //    AdvAcCode += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            //});
    //            //$('#AdvAcCode').append(AdvAcCode);

    //            $("#agreement_no").empty();
    //            var Agreement_No = '<option value="">--Select--</select>';
    //            $.each(response.Agreement_No, function (index, data) {
    //                Agreement_No += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#agreement_no').append(Agreement_No);

    //            $("#Property_id").empty();
    //            var Property_Id = '<option value="">--Select--</select>';
    //            $.each(response.Property_Id, function (index, data) {
    //                Property_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_id').append(Property_Id);

    //            $("#Property_Name").empty();
    //            var Property_Name = '<option value="">--Select--</select>';
    //            $.each(response.Property_Name, function (index, data) {
    //                Property_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Property_Name').append(Property_Name);

    //            $("#Tenant_id").empty();
    //            var Tenant_Id = '<option value="">--Select--</select>';
    //            $.each(response.Tenant_Id, function (index, data) {
    //                Tenant_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_id').append(Tenant_Id);

    //            $("#Tenant_Name").empty();
    //            var Tenant_Name = '<option value="">--Select--</select>';
    //            $.each(response.Tenant_Name, function (index, data) {
    //                Tenant_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Tenant_Name').append(Tenant_Name);

    //            $("#Unit_ID").empty();
    //            var Unit_Id = '<option value="">--Select--</select>';
    //            $.each(response.Unit_Id, function (index, data) {
    //                Unit_Id += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#Unit_ID').append(Unit_Id);

    //            $("#unit_Name").empty();
    //            var Unit_Name = '<option value="">--Select--</select>';
    //            $.each(response.Unit_Name, function (index, data) {
    //                Unit_Name += '<option value="' + data.Text + '">' + data.Text + '</option>';
    //            });
    //            $('#unit_Name').append(Unit_Name);

    //            $('#TotalAmount').val(response.TotalAmount[0].Text);
    //            $("#TotalAmount").trigger("change");
    //        },
    //        error: function (jqXhr, textStatus, errorThrown) {
    //            alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
    //        },
    //        complete: function () {
    //            $("#img-loader").addClass("hide");
    //        }
    //    });
    //}
    var i = parseInt($("#receipt-count").val());
    function add() {
        var InvoiceType = document.getElementById("InvoiceType").value;
        var InvoiceNumber = document.getElementById("InvoiceNumber").value;
        var InvoiceDate = document.getElementById("InvoiceDate").value;
        var InvoiceDescription = document.getElementById("InvoiceDescription").value;

        var InvoiceAmount = document.getElementById("InvoiceAmount").value;
        var CreditAmount = document.getElementById("CreditAmount").value;
        var ReceivedAmount = document.getElementById("ReceivedAmount").value;
        var BalanceAmount = document.getElementById("BalanceAmount").value;
        var Remarks = document.getElementById("Remarks").value;
        if ((InvoiceType == null || InvoiceType == "") || (InvoiceNumber == null || InvoiceNumber == "") || (InvoiceDate == null || InvoiceDate == "") || (InvoiceDescription == null || InvoiceDescription == "") || (InvoiceAmount == null || InvoiceAmount == "") || (CreditAmount == null || CreditAmount == "") || (ReceivedAmount == null || ReceivedAmount == "") || (BalanceAmount == null || BalanceAmount == "")) {
            $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
            $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
            $(".result-title").text("Failure");
            $(".result-modal-body span").text("Enter required fields");
            $('#masterResultModal').modal('show');
            return false;
        }
        $("#TotalAmount").val(Number($("#TotalAmount").val()) + Number(BalanceAmount));
        $("#TotalAmount").trigger("change");
        var html = "<tr><td><div class='col-md-12 document-row' id='GridView" + i + "'>";

        html = html + "<div class='col-md-12'>";

        html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceType" + i + "'  type='text' value='" + InvoiceType + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].Invtype' data-name='Invtype' readonly/></div>";
        html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceNumber" + i + "'  type='text' value='" + InvoiceNumber + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].Invno' data-name='Invno' readonly/></div>";
        html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='date' id='InvoiceDate" + i + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].InvoiceDate' data-name='InvoiceDate' value='" + InvoiceDate + "' readonly/></div>";
        html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='InvoiceDescription" + i + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].Description' data-name='Description' value='" + InvoiceDescription + "' readonly/></div>";
        html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='Remarks" + i + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].Remarks' data-name='Remarks' value='" + Remarks + "' readonly/></div></div><div class='col-md-12'>";
        html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='InvoiceAmount" + i + "'  type='text' value='" + InvoiceAmount + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].InvoiceAmount' data-name='InvoiceAmount' readonly/></div>";
        html = html + " <div class='col-md-3 form-group'><input style='border: none;background: none;box-shadow: none;' id='CreditAmount" + i + "'  type='text' value='" + CreditAmount + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].CreditAmt' data-name='CreditAmt' readonly/></div>";
        html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='ReceivedAmount" + i + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].ReceivedAmount' data-name='ReceivedAmount' value='" + ReceivedAmount + "' readonly/></div>";
        html = html + " <div class='col-md-2 form-group'><input style='border: none;background: none;box-shadow: none;' type='text' id='BalanceAmount" + i + "' class='form-control master-form-input' name='ReceiptDetailsList[" + i + "].Balance' data-name='Balance' value='" + BalanceAmount + "' readonly/></div>";
        html = html + "<div class='col-md-2 form-group'></br><Input type='button' class='document-btn removebutton' id='Delete" + i + "'value='Delete' /> </div>";
        html = html + "</div>";

        html = html + "</div>";
        html = html + "<div class='row ht-5'> &nbsp;</div></td></tr><tr><td>&nbsp;</td></tr>"
        $('#ReceiptDetailsListForms').append(html);
        i++;

        //$("#item").val('');
        $("#InvoiceType").val('');
        $("#InvoiceNumber").val('');
        $("#InvoiceDate").val('');
        $("#InvoiceDescription").val('');
        $("#InvoiceAmount").val('');
        $("#CreditAmount").val('');
        $("#ReceivedAmount").val('');
        $("#BalanceAmount").val('');
        $("#Remarks").val('');
        return false;
    }
    $(document).on('click', 'input.removebutton', function () {
        $(this).closest('tr').remove();
        var existfilelist = document.getElementById('ReceiptDetailsListForms');
        var newindex = 0;
        $(existfilelist).find('> tbody > tr').each(function () {
            $(this).find("input").each(function () {
                var dataname = $(this).data("name");
                // alert(dataname + $(this) .val()+ '-' + newindex)
                $(this).attr({
                    'id': function (_, id) {
                        return id + newindex
                    },
                    'name': function (_, name) {
                        //return name + iTenantDocument[0].Name
                        return 'ReceiptDetailsList[' + newindex + '].' + dataname
                    }
                });
            });
            newindex++;
        });
        i = newindex;
    });
    $("form#Receipts").off("submit").on("submit", function (e) {
          
        e.preventDefault();
        try {

            $("#Tenant_Name").val($("#TenantName option:selected").text() == "--Select--" ? null : $("#TenantName option:selected").text());
            $("#Property_Name").val($("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());
            $("#unit_Name").val($("#unitName option:selected").text() == "--Select--" ? null : $("#unitName option:selected").text());
            //$("#BankAcName").val($("#Bank_AcName option:selected").text() == "--Select--" ? null : $("#Bank_AcName option:selected").text());
            //$("#DDChequeNo").val($("#ddChequeNumber option:selected").text() == "--Select--" ? null : $("#ddChequeNumber option:selected").text())
            if ($("#drpCheque").is(':visible')) {
                //alert("hi");
                $("#DDChequeNo").val($("#ddChequeNumber option:selected").text() == "--Select--" ? null : $("#ddChequeNumber option:selected").text());
                //alert($("#DDChequeNo").val());
            }
            else {
                //alert($("else").val());
                $("#DDChequeNo").val($("#txtChequeNo").val());
                //alert($("#DDChequeNo").val());
            }
            var form = $("form#Receipts");
            //$("#Tenant_id").val($("#Supplierid option:selected").text() == "--Select--" ? null : $("#Tenant_id option:selected").text());
            //$("#Tenant_Name").val($("#SupplierName option:selected").text() == "--Select--" ? null : $("#Tenant_Name option:selected").text());

            //$("#Property_id").val($("#Propertyid option:selected").text() == "--Select--" ? null : $("#Propertyid option:selected").text());
            //$("#Property_Name").val($("#PropertyName option:selected").text() == "--Select--" ? null : $("#PropertyName option:selected").text());

            //$("#Unit_ID").val($("#UnitID option:selected").text() == "--Select--" ? null : $("#UnitID option:selected").text());
            //$("#unit_Name").val($("#unitName option:selected").text() == "--Select--" ? null : $("#unitName option:selected").text());
            ////if ($("#RecpType").val() == "cheque" && Reccategory == "advance")
            ////{
            ////    $("#DDChequeNo").val($("#ddChequeDate").val())
            ////    $("#DDChequeDate").val($("#ddChequeDate").text())
            ////}
            $.ajax(
                {
                    url: "../Receipts/AddOrUpdate",
                    method: "POST",
                    data: JSON.stringify($(form).serializeObject()),
                    contentType: "application/json",
                    processData: false,
                    success: function (response) {

                        getReceipt();
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-error");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-success");
                        $(".result-title").text("Success");
                        $(".result-modal-body span").text(response.Message);
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                        $("#masterResultModal").contents().find(".modal-header").removeClass("result-modal-success");
                        $("#masterResultModal").contents().find(".modal-header").addClass("result-modal-error");
                        $(".result-title").text("Failure");
                        $(".result-modal-body span").text(masterResultError);
                    },
                    complete: function () {
                        $('#masterResultModal').modal('show');
                    }
                });

        }
        catch (ex) {
            alert(ex);
        }

    });
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };
    function formReset() {
        getReceiptAddorUpdate();
    }
    $(document).ready(function () {
        var id = $("#Id").val();
        if (id != 0) {
            document.getElementById("btnSubmit").innerHTML = 'Update';
        }
        showHideSubForm($("#Reccategory option:selected").val());
        ShowHidePaymentModeFields($("#RecpType").val())
    });
    //function showHideCheque(paymentMode) {
    //    if (paymentMode != "cheque") {
    //        document.getElementById('chequeNo').style.display = "none";
    //        document.getElementById('chequeDate').style.display = "none";
    //    }
    //    else {
    //        document.getElementById('chequeNo').style.display = "block";
    //        document.getElementById('chequeDate').style.display = "block";
    //    }
    //}
    function showHideChequeField(value) {

        if (value) {
            $("[name='cheque'] :input").attr("disabled", value);
            $("[name='cheque']").hide();
        }
        else {
            $("#txtChequeDate :input").attr("disabled", value);
            $("#txtChequeDate").show();
            if ($("#Reccategory").val() == "advance") { //|| $("#Reccategory").val() == "security deposit"
                $("#drpCheque :input").attr("disabled", false);
                $("#drpCheque").show();
                $("#drpChequeDate :input").attr("disabled", false);
                $("#drpChequeDate").show();
                //$("#txtCheque :input").attr("disabled", true);
                $("#txtCheque").hide();
                //$("#txtChequeDate").hide();
            }
            else {
                $("#txtCheque :input").attr("disabled", false);
                $("#txtCheque").show();
                //$("#txtChequeDate").show();
                $("#drpCheque :input").attr("disabled", true);
                $("#drpCheque").hide();
                $("#drpChequeDate :input").attr("disabled", true);
                $("#drpChequeDate").hide();
                //$("#drpCheque :input").attr("disabled", !value);
            }
            //$("[name='cheque']").show();
        }

        //if (value) {
        //    $("[name='cheque']").hide();
        //}
        //else {
        //    $("[name='cheque']").show();
        //}

    }
    function showhideBankDetails(value) {
        $("#bankDetails :input").attr("disabled", value);
        if (value) {
            $("#bankDetails").hide();
        }
        else {
            $("#bankDetails").show();
        }
    }
    function showhideAdvancePayment(value) {
        $("#advancePayment :input").attr("disabled", value);
        if (value) {
            $("#advancePayment").hide();
        }
        else {
            $("#advancePayment").show();
        }
    }
    function showhidePDC(value) {
        $("#pdcstatus :input").attr("disabled", value);
        if (value) {
            $("#pdcstatus").hide();
        }
        else {
            $("#pdcstatus").show();
        }
    }
    function ShowHidePaymentModeFields(paymentModeValue) {

        if (paymentModeValue == "cheque" || paymentModeValue == "DD") {
            showHideChequeField(false);
            showhideAdvancePayment(true);
            showhidePDC(true);
            showhideBankDetails(false);
            if ($("#Reccategory").val() == "against invoice" || $("#Reccategory").val() =="advance") {
                //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "advance") {

                $("#DDChequeNo").prop("readonly", true);
                getAgreementNoByMode(paymentModeValue,0);
            }
            else if ($("#Reccategory").val() == "against invoice") {
                getAgreementNumbers(1);
            }
            //else if ($("#Reccategory").val() == "security deposit")
            //{
            //    getAgreementNumbers(2);
            //}
            //else if($("#Reccategory").val() == "against invoice")
            //{
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}




        }
        else if (paymentModeValue == "cash") {
            showHideChequeField(true);
            showhideAdvancePayment(true);
            showhideBankDetails(false);
            showhidePDC(true);
            if ($("#Reccategory").val() == "against invoice" || $("#Reccategory").val() == "advance") {
                //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "advance") {
                getAgreementNoByMode(paymentModeValue, 0);
            }
            else if ($("#Reccategory").val() == "against invoice") {
                getAgreementNumbers(1);
            }
            //else if ($("#Reccategory").val() == "security deposit") {
            //    getAgreementNumbers(2);
            //}

            //else if ($("#Reccategory").val() == "against invoice") {
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}
        }
        else if (paymentModeValue == "online") {
            showHideChequeField(false);
            showhideAdvancePayment(true);
            showhideBankDetails(false);
            showhidePDC(true);
            if ($("#Reccategory").val() == "against invoice" || $("#Reccategory").val() == "advance") {
               //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "advance") {
                $("#DDChequeNo").prop("readonly", true);
                getAgreementNoByMode(paymentModeValue, 0);
            }
            else if ($("#Reccategory").val() == "against invoice") {
                getAgreementNumbers(1);
            }
            //else if ($("#Reccategory").val() == "security deposit") {
            //    getAgreementNumbers(2);
            //}
            //else if ($("#Reccategory").val() == "against invoice") {
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}
        }
        else if (paymentModeValue == "pdc") {
            showHideChequeField(false);
            showhideAdvancePayment(true);
            showhideBankDetails(false);
            showhidePDC(false);
            if ($("#Reccategory").val() == "against invoice" || $("#Reccategory").val() == "advance") {
                //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "advance") {
                $("#DDChequeNo").prop("readonly", true);
                getAgreementNoByMode(paymentModeValue, 0);
            }
            else if ($("#Reccategory").val() == "against invoice") {
                getAgreementNumbers(1);
            }
            //else if ($("#Reccategory").val() == "security deposit") {
            //    getAgreementNumbers(2);
            //}
            //else if ($("#Reccategory").val() == "against invoice") {
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}
        }
        else if (paymentModeValue == "Advance adjust") {
            showHideChequeField(true);
            showhideAdvancePayment(false);
            showhideBankDetails(false);
            showhidePDC(true);
            //$("#TotalAmount").prop("readonly", true);
            if ($("#Reccategory").val() == "against invoice" || $("#Reccategory").val() == "advance") {
                //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "advance") {
                getAgreementNoByMode(paymentModeValue, 0);
            }
            //else if ($("#Reccategory").val() == "security deposit") {
            //    getAgreementNumbers(2);
            //}


            //else if ($("#Reccategory").val() == "against invoice") {
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}
        }
        else {
            showHideChequeField(true);
            showhideAdvancePayment(true);
            showhideBankDetails(false);
            showhidePDC(true);
            if ($("#Reccategory").val() == "against invoice") {
                //$("#TotalAmount").prop("readonly", true);
            }
            else {
                //$("#TotalAmount").prop("readonly", false);
            }
            if ($("#Reccategory").val() == "others" || $("#Reccategory").val() == "" || $("#Reccategory").val() == "advance") {
                getAgreementNumbers(0);
            }
            else if ($("#Reccategory").val() == "against invoice")
            {
                getAgreementNumbers(1);
            }
            //else if ($("#Reccategory").val() == "security deposit") {
            //    getAgreementNumbers(2);
            //}
            //else if ($("#Reccategory").val() == "against invoice") {
            //    $("#DDChequeNo").prop("readonly", false);
            //    getAgreementNoByMode(paymentModeValue, 1);
            //}
        }
    }
    $("#RecpType").change(function ()
    {
        ShowHidePaymentModeFields($("#RecpType").val())
    });
    $("#ddChequeNumber").change(function () {
        $("#DDChequeNo").val($("#ddChequeNumber").val())
        getChequeDetails($("#RecpType").val(), $("#agreement_no").val(), $("#DDChequeNo").val())
    });

    function getAgreementNoByMode(mode, flg) {
        //alert("Hi");
        $.ajax(
        {
            url: "../Receipts/GetAggrementNumberByMode",
            type: "Get",
            data: { Mode: mode, FLG: flg },
            success: function (response) {
                $("#agreement_no").empty();
                var Agreement_No = '<option value="">--Select--</option>';
                $.each(response, function (index, data) {
                    Agreement_No += '<option value="' + data + '">' + data + '</option>';
                });
                $('#agreement_no').append(Agreement_No);
            },
            error: function (jqXhr, textStatus, errorThrown) {
                alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                $("#img-loader").addClass("hide");
            }
        });
    }
    function getAdvancePaymentDetail(value) {
        $.ajax(
        {
            url: "../Receipts/GetAdvanceAdjustmentAmount",
            type: "Get",
            data: { advanceCode: value },
            success: function (response) {
                $("#TotalAmount").val(response);
                $("#TotalAmount").trigger("change");
            },
            error: function (jqXhr, textStatus, errorThrown) {
                //alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
            },
            complete: function () {
                //$("#img-loader").addClass("hide");
            }
        });
    }
    $("#AdvAcCode").on('change', function (e) {

        if ($("#AdvAcCode").val() != "") {

            $.ajax(
               {
                   url: "../Receipts/GetAgreementDetailsOnAdvAdj",
                   // dataType: "jsonp",
                   method: "GET",
                   data: { AdvanceReceiptNo: $("#AdvAcCode").val() }, //FormData(form.get(0)),
                   contentType: "application/json",

                   success: function (response) {

                       $("#agreement_no").empty();
                       var options = '<option vlaue="">--Select--</option>';
                       $.each(response.Agreement, function (index, data) {
                           options += '<option value="' + data.AgreementNo + '">' + data.AgreementNo + '</option>';
                       });
                       $('#agreement_no').append(options);
                       $("#agreement_no").val($("#agreement_no option").eq(1).val()).change();

                       $("#Tenant_id").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Tenants, function (index, data) {
                           options += '<option value="' + data.Tenantid + '">' + data.Tenantid + '</option>';
                       });
                       $('#Tenant_id').append(options);

                       $("#TenantName").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Tenants, function (index, data) {
                           options += '<option value="' + data.Tenantid + '">' + data.TenantName + '</option>';
                       });
                       $('#TenantName').append(options);

                       $("#Property_id").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Properties, function (index, data) {
                           options += '<option value="' + data.Propertyid + '">' + data.Propertyid + '</option>';
                       });
                       $('#Property_id').append(options);

                       $("#PropertyName").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Properties, function (index, data) {
                           options += '<option value="' + data.Propertyid + '">' + data.PropertyName + '</option>';
                       });
                       $('#PropertyName').append(options);

                       $("#Unit_ID").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Units, function (index, data) {
                           options += '<option value="' + data.Unitid + '">' + data.Unitid + '</option>';
                       });
                       $('#Unit_ID').append(options);

                       $("#unitName").empty();
                       var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       $.each(response.Units, function (index, data) {
                           options += '<option value="' + data.Unitid + '">' + data.unitName + '</option>';
                       });
                       $('#unitName').append(options);

                       //$("#ddChequeNumber").empty();
                       ////var options = agreement_no == null ? '<option vlaue="">--Select--</option>' : '';
                       //var options = '<option vlaue="">--Select--</option>';
                       //$.each(response.Cheques, function (index, data) {
                       //    options += '<option value="' + data.Cheque_No + '">' + data.Cheque_No + '</option>';
                       //});
                       //$('#ddChequeNumber').append(options);

                       //$("#DDChequeDate").empty();
                       //var options = '<option value="">--Select--</option>';
                       //$.each(response.Units, function (index, data) {
                       //    options += '<option value="' + data.Cheque_No + '">' + data.cheque_date + '</option>';
                       //});
                       //$('#DDChequeDate').append(options);
                       if (response.AgreementDate != null)
                           $("#ContracAgreementDate").val(ToJavaScriptDate(response.AgreementDate));
                       //if ($("#RecpType").val() == "cash" && $("#Reccategory").val() == "advance")
                       //    getChequeDetails($("#RecpType").val(), $("#agreement_no").val(), $("#DDChequeNo").val());
                   },
                   error: function (jqXhr, textStatus, errorThrown) {
                       alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                   },
                   complete: function () {
                       // $("#").addClass("hide");
                   }

               });
            getAdvancePaymentDetail($("#AdvAcCode").val());
            //getInvoiceNumber();
        }
        else {
            $("#TotalAmount").val(0);
            $("#TotalAmount").trigger("change");
        }

    });
    function ToJavaScriptDate(value) {
        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));
        return dt.getFullYear() + "-" + ("0" + (dt.getMonth() + 1)).slice(-2) + "-" + ("0" + dt.getDate()).slice(-2);
    }


    //*********************
    //Code By Rajesh

    //$("#BankAcCode").change(function () {
    //    $("#Bank_AcName").val($("#BankAcCode option:selected").val());
    //});

    //$("#Bank_AcName").change(function () {
    //    $("#BankAcCode").val($("#Bank_AcName option:selected").val());
    //});

    function disablectrl() {
        if ($("#btnSubmit").text() == "Update") {
            $("#Reccategory option:not(:selected)").prop('disabled', true);
            $("#RecpType option:not(:selected)").prop("disabled", true);
            $("#Property_id option:not(:selected)").prop("disabled", true);
            $("#PropertyName option:not(:selected)").prop("disabled", true);
            $("#Unit_ID option:not(:selected)").prop("disabled", true);
            $("#unitName option:not(:selected)").prop("disabled", true);
            $("#ddChequeNumber option:not(:selected)").prop("disabled", true);
            $("#agreement_no option:not(:selected)").prop("disabled", true);
            $("#Tenant_id option:not(:selected)").prop("disabled", true);
            $("#TenantName option:not(:selected)").prop("disabled", true);
            //$("#txtChequeNo").prop("disabled", true);
            //$("#agreeDD").hide();
            //$("#agreeTB").show();
            //$("#drpCheque").hide();
            //$("#txtCheque").show();
            //$("#txtChequeNo").attr("required", true);

        }
        else if ($("#btnSubmit").text() == "Submit") {
            $("#Reccategory option:not(:selected)").prop("disabled", false);
            $("#RecpType option:not(:selected)").prop("disabled", false);
            $("#Property_id option:not(:selected)").prop("disabled", false);
            $("#PropertyName option:not(:selected)").prop("disabled", false);
            $("#Unit_ID option:not(:selected)").prop("disabled", false);
            $("#unitName option:not(:selected)").prop("disabled", false);
            $("#ddChequeNumber option:not(:selected)").prop("disabled", false);
            $("#agreement_no option:not(:selected)").prop("disabled", false);
            $("#Tenant_id option:not(:selected)").prop("disabled", false);
            $("#TenantName option:not(:selected)").prop("disabled", false);
            //$("#txtChequeNo").prop("disabled", false);
            //$("#agreeDD").show();
            //$("#agreeTB").hide();
            //$("#drpCheque").hide();
            //$("#txtCheque").show();
        }
    }

    $(document).ready(function () {
        disablectrl();
        if ($("#btnSubmit").text() == "Update") {
            //$("#agreementno").trigger("change");
        }

    });

</script>